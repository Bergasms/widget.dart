// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"":"Object;i,list",
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.StackTrace = {"":"Object;stack",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : "";
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
}
};

$$.Dynamic_ = {"":"Object;"
};

$$.Null = {"":"Object;"
};

$$.CastErrorImplementation = {"":"Object;actualType,expectedType",
 toString$0: function() {
  return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
}
};

$$.ConstantMap = {"":"Object;length>,_jsObject,_liblib2$_keys>",
 containsKey$1: function(key) {
  if ($.eqB(key, "__proto__"))
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  var t1 = this._liblib2$_keys;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.ConstantMap_forEach_anon(this, f));
},
 get$keys: function() {
  return this._liblib2$_keys;
},
 get$isEmpty: function() {
  return $.eq(this.length, 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot modify unmodifiable Map"));
},
 operator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this._throwUnmodifiable$0();
},
 remove$1: function(key) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"":"Object;_tag>,_tags,_set>"
};

$$.JSSyntaxRegExp = {"":"Object;_liblib2$_pattern,_multiLine,_ignoreCase",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.getInterceptor$JSStringJSArray(m).operator$index$1(m, 0);
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._liblib2$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"":"Object;pattern>,str,start,end,_groups",
 group$1: function(index) {
  var t1 = this._groups;
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
},
 operator$index$1: function(index) {
  var t1 = this._groups;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout1(1, index, t1);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout1: function(state0, index, t1) {
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
}
};

$$._AllMatchesIterable = {"":"Object;_re,_str",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":"Object;_re,_str,_liblib2$_next=,_done",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._liblib2$_next;
  this._liblib2$_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._liblib2$_next == null))
    return true;
  this._liblib2$_next = this._re.firstMatch$1(this._str);
  if (this._liblib2$_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"":"Object;start,str,pattern>",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$.NullThrownError = {"":"Object;",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"":"Object;message>",
 toString$0: function() {
  if (!(this.get$message() == null))
    return "Illegal argument(s): " + $.S(this.get$message());
  return "Illegal argument(s)";
}
};

$$.RangeError = {"":"ArgumentError;message",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"":"Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  t1.i_1 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_1, t2.length); t1.i_1 = $.add(t1.i_1, 1)) {
    if ($.gtB(t1.i_1, 0)) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_1;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_0;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_0;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_0 = $.StringBuffer_StringBuffer("");
      t1.i_1 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (t3 = $.getInterceptor$JSStringJSArray(t2); $.ltB(t1.i_1, t3.get$length(t2)); t1.i_1 = $.add(t1.i_1, 1)) {
          if ($.gtB(t1.i_1, 0)) {
            t4 = t1.sb_0;
            $.getInterceptor$JSArray(t4).add$1(t4, ", ");
          }
          t4 = t1.sb_0;
          $.getInterceptor$JSArray(t4).add$1(t4, $.Error_safeToString(t3.operator$index$1(t2, t1.i_1)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, t4, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
      else {
        t3 = t1.sb_0;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        for (t3 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.ltB(i, t3.get$length(t2)); ++i) {
          if (i > 0) {
            t4 = t1.sb_0;
            $.getInterceptor$JSArray(t4).add$1(t4, ", ");
          }
          t4 = t1.sb_0;
          $.getInterceptor$JSArray(t4).add$1(t4, t3.operator$index$1(t2, i));
        }
        t1 = t1.sb_0;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"":"Object;message>",
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {"":"Object;message>",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {"":"Object;",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$.RuntimeError = {"":"Object;message>",
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$._ExceptionImplementation = {"":"Object;message>",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
}
};

$$.FormatException = {"":"Object;message>",
 toString$0: function() {
  return "FormatException: " + $.S(this.message);
}
};

$$.IllegalJSRegExpException = {"":"Object;_pattern,_errmsg",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
}
};

$$.Expando = {"":"Object;name",
 toString$0: function() {
  return "Expando:" + $.S(this.name);
},
 operator$index$1: function(object) {
  var values = $.Primitives_getProperty(object, "expando$values");
  return values == null ? null : $.Primitives_getProperty(values, this._getKey$0());
},
 operator$indexSet$2: function(object, value) {
  var values = $.Primitives_getProperty(object, "expando$values");
  if (values == null) {
    values = $.Object$();
    $.Primitives_setProperty(object, "expando$values", values);
  }
  $.Primitives_setProperty(values, this._getKey$0(), value);
},
 _getKey$0: function() {
  var key, t1;
  key = $.Primitives_getProperty(this, "expando$key");
  if (key == null) {
    t1 = $.Expando__keyCount;
    $.Expando__keyCount = $.add(t1, 1);
    key = "expando$key$" + $.S(t1);
    $.Primitives_setProperty(this, "expando$key", key);
  }
  return key;
}
};

$$.FutureNotCompleteException = {"":"Object;",
 toString$0: function() {
  return "Exception: future has not been completed";
}
};

$$.FutureAlreadyCompleteException = {"":"Object;",
 toString$0: function() {
  return "Exception: future already completed";
}
};

$$.FutureUnhandledException = {"":"Object;source,stackTrace>",
 toString$0: function() {
  var t1, t2, t3;
  t1 = this.source;
  t1 = $.getInterceptor(t1).toString$0(t1);
  t2 = "FutureUnhandledException: exception while executing Future\n  " + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\n  ")) + "\n" + "original stack trace:\n  ";
  t3 = this.stackTrace;
  t3 = $.getInterceptor(t3).toString$0(t3);
  return t2 + $.S($.getInterceptor$JSString(t3).replaceAll$2(t3, "\n", "\n  "));
}
};

$$._FutureImpl = {"":"Object;_isComplete,_value,_exception,_stackTrace,_exceptionHandled,_throwOnException,_successListeners,_exceptionHandlers,_completionListeners",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$exception: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._exception;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true) {
    this._throwOnException = true;
    this._successListeners.push(onSuccess);
  } else if (this._exceptionHandled !== true)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 _handleSuccess$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
},
 handleException$1: function(onException) {
  var t1;
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = $.CONSTANT0.iterator$0(this._exceptionHandlers); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.CONSTANT0.iterator$0(this._successListeners); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._throwOnException)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.CONSTANT0.iterator$0(this._completionListeners); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 get$_complete: function() {
  return new $.BoundClosure(this, '_complete$0');
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
},
 transform$1: function(transformation) {
  var completer = $.Completer_Completer();
  this._forwardException$2(this, completer);
  this._handleSuccess$1(new $._FutureImpl_transform_anon(transformation, completer));
  return completer.get$future();
},
 chain$1: function(transformation) {
  var completer = $.Completer_Completer();
  this._forwardException$2(this, completer);
  this._handleSuccess$1(new $._FutureImpl_chain_anon(this, transformation, completer));
  return completer.get$future();
},
 _forward$2: function(future, completer) {
  this._forwardException$2(future, completer);
  future._handleSuccess$1(completer.get$complete());
},
 _forwardException$2: function(future, completer) {
  future.handleException$1(new $._FutureImpl__forwardException_anon(future, completer));
}
};

$$._CompleterImpl = {"":"Object;_futureImpl",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 get$complete: function() {
  return new $.BoundClosure0(this, 'complete$1');
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception, null);
}
};

$$._HashMapImpl = {"":"Object;_keys>,_values,_loadLimit,_numberOfEntries,_numberOfDeleted",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CONSTANT2)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(2, key, insertionIndex, hash, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      numberOfProbes0 = env3;
      hash = env2;
      insertionIndex = env1;
      key = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.ArgumentError$(null));
      t1 = $.getInterceptor(key).get$hashCode(key);
    case 1:
      state0 = 0;
      hash = $.and(t1, this._keys.length - 1);
      numberOfProbes = 1;
      insertionIndex = -1;
    case 2:
      var t1, key, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
              if (hash !== (hash | 0))
                throw $.iae(hash);
              if (hash < 0 || hash >= t1.length)
                throw $.ioore(hash);
              existingKey = t1[hash];
              if (existingKey == null) {
                if (insertionIndex < 0)
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if (insertionIndex < 0 && existingKey === $.CONSTANT2)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
            case 2:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  hash = $.and($.getInterceptor(key).get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  if (typeof newNumberOfEntries !== 'number')
    throw $.iae(newNumberOfEntries);
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(this._keys.length);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $.List_List(newCapacity);
  this._values = $.List_List(newCapacity);
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CONSTANT2)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t1 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = key;
    t1 = this._values;
    if (newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CONSTANT2)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.operator$index$1$bailout(1, index);
  if (index < 0)
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout: function(state0, index) {
  var t1;
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 putIfAbsent$2: function(key, ifAbsent) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  }
  value = ifAbsent.call$0();
  this.operator$indexSet$2(key, value);
  return value;
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = $.sub(this._numberOfEntries, 1);
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CONSTANT2;
    this._numberOfDeleted = $.add(this._numberOfDeleted, 1);
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CONSTANT2)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.i_0 = 0;
  this.forEach$1(new $._HashMapImpl_keys_anon(t1, list));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $.List_List(8);
  this._values = $.List_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":"Object;"
};

$$._KeyValuePair = {"":"Object;key>,value="
};

$$._LinkedHashMapImpl = {"":"Object;_liblib3$_list,_map",
 operator$indexSet$2: function(key, value) {
  var t1;
  if (this._map.containsKey$1(key) === true) {
    t1 = this._map;
    $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key).get$element().set$value(value);
  } else {
    this._liblib3$_list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._liblib3$_list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var t1, entry;
  t1 = this._map;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout0(1, key, t1);
  if (key !== (key | 0))
    throw $.iae(key);
  if (key < 0 || key >= t1.length)
    throw $.ioore(key);
  entry = t1[key];
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 operator$index$1$bailout0: function(state0, key, t1) {
  var entry = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 putIfAbsent$2: function(key, ifAbsent) {
  var value = this.operator$index$1(key);
  if (this.operator$index$1(key) == null && this._map.containsKey$1(key) !== true) {
    value = ifAbsent.call$0();
    this.operator$indexSet$2(key, value);
  }
  return value;
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.index_0 = 0;
  this._liblib3$_list.forEach$1(new $._LinkedHashMapImpl_keys_anon(t1, list));
  return list;
},
 forEach$1: function(f) {
  this._liblib3$_list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  this._liblib3$_list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._liblib3$_list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"":";",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"":"Object;_previous=,_next=,_liblib3$_element>",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 append$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this, this._next);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._liblib3$_element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._liblib3$_element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._liblib3$_element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":"DoubleLinkedQueueEntry;_previous,_next,_liblib3$_element",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":"Object;_sentinel",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_0 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_0;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_liblib3$_element());
  }
},
 some$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_liblib3$_element()) === true)
      return true;
  }
  return false;
},
 map$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    t1.addLast$1(other, f.call$1(entry.get$_liblib3$_element()));
  }
  return other;
},
 filter$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_liblib3$_element()) === true)
      t1.addLast$1(other, entry.get$_liblib3$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":"Object;_sentinel,_currentEntry",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._HashSetImpl = {"":"Object;_backingMap>",
 clear$0: function() {
  this._backingMap.clear$0();
},
 add$1: function(value) {
  this._backingMap.operator$indexSet$2(value, value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, new $._HashSetImpl_addAll_anon(this));
},
 forEach$1: function(f) {
  this._backingMap.forEach$1(new $._HashSetImpl_forEach_anon(f));
},
 map$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $._HashSetImpl_map_anon(f, result));
  return result;
},
 filter$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $._HashSetImpl_filter_anon(f, result));
  return result;
},
 some$1: function(f) {
  var keys = this._backingMap.get$keys();
  return $.getInterceptor$JSArray(keys).some$1(keys, f);
},
 get$isEmpty: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 iterator$0: function() {
  return $._HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$();
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"":"Object;_entries,_nextValidIndex",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  t3 = $.getInterceptor$JSStringJSArray(t2);
  if ($.geB(t1, t3.get$length(t2)))
    return false;
  if (t3.operator$index$1(t2, this._nextValidIndex) === $.CONSTANT2)
    this._advance$0();
  return $.lt(this._nextValidIndex, t3.get$length(t2));
},
 next$0: function() {
  var t1, t3, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout1(1, t1);
  t3 = this._nextValidIndex;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  res = t1[t3];
  this._advance$0();
  return res;
},
 next$0$bailout1: function(state0, t1) {
  var res = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, this._nextValidIndex);
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, t3, length$, t2, entry;
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._advance$0$bailout(1, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CONSTANT2);
},
 _advance$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      length$ = env2;
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._entries;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      length$ = t3.get$length(t1);
    case 2:
      var t1, t3, length$, t2, entry;
      state0 = 0;
      do {
        t2 = this._nextValidIndex + 1;
        this._nextValidIndex = t2;
        if ($.geB(t2, length$))
          break;
        entry = t3.operator$index$1(t1, this._nextValidIndex);
      } while (entry == null || entry === $.CONSTANT2);
  }
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._StringBufferImpl = {"":"Object;_buffer,_length",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1;
  str = $.getInterceptor(obj).toString$0(obj);
  if (!(typeof str === 'string'))
    throw $.$$throw($.ArgumentError$("toString() did not return a string"));
  if ($.CONSTANT1.get$isEmpty(str) === true)
    return;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, t1, str);
  this._length = t1 + str.length;
},
 add$1$bailout: function(state0, t1, str) {
  this._length = $.add(t1, str.length);
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(objects).iterator$0(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
},
 clear$0: function() {
  this._buffer = $.List_List(null);
  this._length = 0;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1)) {
    t1 = this._buffer;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0);
  }
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"":"Object;",
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 operator$index$1: function(receiver, a0) {
  return receiver.operator$index$1(a0);
},
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 some$1: function(receiver, a0) {
  return receiver.some$1(a0);
},
 get$length: function(receiver) {
  return receiver.get$length();
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 contains$2: function(receiver, a0, a1) {
  return receiver.contains$2(a0, a1);
},
 trim$0: function(receiver) {
  return receiver.trim$0();
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 indexOf$2: function(receiver, a0, a1) {
  return receiver.indexOf$2(a0, a1);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 split$1: function(receiver, a0) {
  return receiver.split$1(a0);
},
 getRange$2: function(receiver, a0, a1) {
  return receiver.getRange$2(a0, a1);
},
 get$isInfinite: function(receiver) {
  return receiver.get$isInfinite();
},
 get$last: function(receiver) {
  return receiver.get$last();
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 get$isNaN: function(receiver) {
  return receiver.get$isNaN();
},
 addAll$1: function(receiver, a0) {
  return receiver.addAll$1(a0);
},
 toInt$0: function(receiver) {
  return receiver.toInt$0();
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 allMatches$1: function(receiver, a0) {
  return receiver.allMatches$1(a0);
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 filter$1: function(receiver, a0) {
  return receiver.filter$1(a0);
},
 map$1: function(receiver, a0) {
  return receiver.map$1(a0);
},
 toLowerCase$0: function(receiver) {
  return receiver.toLowerCase$0();
}
};

$$.JSFunction = {"":"Object;",
 toString$0: function(receiver) {
  return "Closure";
}
};

$$.JSBool = {"":"Object;",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {"":"Object;",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {"":"Object;",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addAll$1: function(receiver, collection) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;)
    $.CONSTANT0.add$1(receiver, t1.next$0());
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 map$1: function(receiver, f) {
  return $.Collections_map(receiver, [], f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if (end > receiver.length)
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 get$last: function(receiver) {
  var t1, t2;
  t1 = receiver.length;
  t2 = t1 - 1;
  if (t2 < 0)
    throw $.ioore(t2);
  return receiver[t2];
},
 some$1: function(receiver, f) {
  return $.Collections_some(receiver, f);
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 operator$index$1: function(receiver, index) {
  if (!(typeof index === 'number' && Math.floor(index) === index))
    throw $.$$throw($.ArgumentError$(index));
  if (index >= receiver.length || index < 0)
    throw $.$$throw($.RangeError$value(index));
  return receiver[index];
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {"":"Object;",
 get$isNaN: function(receiver) {
  return isNaN(receiver);
},
 toInt$0: function(receiver) {
  var truncated;
  if (this.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$("NaN"));
  if (this.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$("Infinity"));
  truncated = this.truncate$0(receiver);
  return truncated == -0.0 ? 0 : truncated;
},
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 get$isInfinite: function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {"":"JSNumber;"
};

$$.JSDouble = {"":"JSNumber;"
};

$$.JSString = {"":"Object;",
 charCodeAt$1: function(receiver, index) {
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 split$1: function(receiver, pattern) {
  $.checkNull(pattern);
  return receiver.split(pattern);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 toLowerCase$0: function(receiver) {
  return receiver.toLowerCase();
},
 trim$0: function(receiver) {
  return receiver.trim();
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var i, hash, hash0, hash1;
  for (i = 0, hash = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 operator$index$1: function(receiver, index) {
  if (!(typeof index === 'number' && Math.floor(index) === index))
    throw $.$$throw($.ArgumentError$(index));
  if (index >= receiver.length || index < 0)
    throw $.$$throw($.RangeError$value(index));
  return receiver[index];
},
 is$String: true
};

$$.BodyElementEvents = {"":"ElementEvents;_ptr",
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.DocumentEvents = {"":"ElementEvents;_ptr"
};

$$._FrozenCssClassSet = {"":"CssClassSet;",
 writeClasses$1: function(s) {
  throw $.$$throw($.UnsupportedError$("frozen class set cannot be modified"));
},
 readClasses$0: function() {
  return $.Set_Set();
}
};

$$._ChildrenElementList = {"":"Object;_element>,_childElements",
 _toList$0: function() {
  var t1, t3, t4, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  t4 = t1.length;
  output = $.List_List(t4);
  len = t1.length;
  i = 0;
  for (; i < len; ++i) {
    t2 = t1[i];
    if (i >= t4)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      output = env3;
      t3 = env2;
      len = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._childElements;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      output = $.List_List(t3.get$length(t1));
      len = t3.get$length(t1);
    case 2:
      var t1, t3, output, len, i, t2;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t2 = t3.operator$index$1(t1, i);
        if (i >= output.length)
          throw $.ioore(i);
        output[i] = t2;
      }
      return output;
  }
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this._childElements, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(f, output);
  for (t2 = this._childElements, t2 = $.getInterceptor$JSArray(t2).iterator$0(t2); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 some$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 map$1: function(f) {
  var out, t1;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 get$isEmpty: function() {
  return this._element.firstElementChild == null;
},
 get$length: function() {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  var t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout2(1, t1, index);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout2: function(state0, t1, index) {
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
},
 operator$indexSet$2: function(index, value) {
  var t1, t2;
  t1 = this._element;
  t2 = this._childElements;
  t1.$$dom_replaceChild$2(value, $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 add$1: function(value) {
  this._element.$$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._element.$$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  var t1 = this._toList$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._element; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 clear$0: function() {
  this._element.textContent = "";
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    this._element.$$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._element.lastElementChild;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":"Object;_nodeList",
 forEach$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 map$1: function(f) {
  var out, t1;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 some$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 get$isEmpty: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 set$length: function(newLength) {
  var t1 = this._nodeList;
  $.getInterceptor$JSArray(t1).set$length(t1, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(""));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 get$last: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":"Object;_list,_index",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._list;
  t2 = this._index;
  if (typeof t2 !== 'number')
    return this.next$0$bailout2(1, t2, t1);
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 next$0$bailout2: function(state0, t2, t1) {
  this._index = $.add(t2, 1);
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  var t1, t2;
  t1 = this._index;
  t2 = this._list;
  return $.lt(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2));
}
};

$$._ElementCssClassSet = {"":"CssClassSet;_element>",
 readClasses$0: function() {
  var s, classname, t1, t2, t3, trimmed;
  s = $.Set_Set();
  classname = this._element.className;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var t1 = $.Strings_join($.List_List$from(s), " ");
  this._element.className = t1;
}
};

$$.ElementEvents = {"":"Events;_ptr",
 get$click: function() {
  return this.operator$index$1("click");
},
 click$0: function() {
  return this.get$click().call$0();
}
};

$$.Events = {"":"Object;_ptr",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"":"Object;_ptr,_type",
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
},
 remove$2: function(listener, useCapture) {
  this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener, false);
},
 dispatch$1: function(evt) {
  return this._ptr.$$dom_dispatchEvent$1(evt);
}
};

$$.FrameSetElementEvents = {"":"ElementEvents;_ptr",
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$.InputElementEvents = {"":"ElementEvents;_ptr"
};

$$.MediaElementEvents = {"":"ElementEvents;_ptr"
};

$$._ChildNodeListLazy = {"":"Object;_this",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.textContent = "";
},
 operator$indexSet$2: function(index, value) {
  this._this.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $.Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 get$length: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
},
 operator$index$1: function(index) {
  var t1 = this._this.childNodes;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout4(1, index, t1);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout4: function(state0, index, t1) {
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.WindowEvents = {"":"Events;_ptr",
 get$click: function() {
  return this.operator$index$1("click");
},
 click$0: function() {
  return this.get$click().call$0();
},
 get$message: function() {
  return this.operator$index$1("message");
}
};

$$._AttributeMap = {"":"Object;_element>",
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.containsKey$1(key) !== true)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 clear$0: function() {
  for (var t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    this.remove$1(t1.next$0());
},
 forEach$1: function(f) {
  var t1, t2;
  for (t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    f.call$2(t2, this.operator$index$1(t2));
  }
},
 get$keys: function() {
  var attributes, keys, t1, len, i;
  attributes = this._element.attributes;
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  keys = $.List_List(null);
  t1 = $.getInterceptor$JSStringJSArray(attributes);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    if (this._matches$1(attributes[i]) === true) {
      if (i >= attributes.length)
        throw $.ioore(i);
      keys.push(attributes[i].get$$$dom_localName());
    }
  }
  return keys;
},
 get$keys$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      keys = env3;
      len = env2;
      attributes = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._element.attributes;
    case 1:
      state0 = 0;
      keys = $.List_List(null);
      t1 = $.getInterceptor$JSStringJSArray(attributes);
      len = t1.get$length(attributes);
    case 2:
      var attributes, keys, t1, len, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i)
        if (this._matches$1(t1.operator$index$1(attributes, i)) === true)
          keys.push(t1.operator$index$1(attributes, i).get$$$dom_localName());
      return keys;
  }
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"":"_AttributeMap;_element",
 containsKey$1: function(key) {
  return this._element.$$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._element.$$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._element.$$dom_setAttribute$2(key, $.S(value));
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._element;
  value = t1.$$dom_getAttribute$1(key);
  t1.$$dom_removeAttribute$1(key);
  return value;
},
 get$length: function() {
  var t1 = this.get$keys();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 _matches$1: function(node) {
  return node.get$$$dom_namespaceUri() == null;
}
};

$$.CssClassSet = {"":"Object;",
 toString$0: function() {
  return $.Strings_join($.List_List$from(this.readClasses$0()), " ");
},
 iterator$0: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 forEach$1: function(f) {
  var t1 = this.readClasses$0();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 map$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).map$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 some$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).some$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 add$1: function(value) {
  this._modify$1(new $.CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s, result;
  s = this.readClasses$0();
  result = s.remove$1(value);
  this.writeClasses$1(s);
  return result;
},
 addAll$1: function(collection) {
  this._modify$1(new $.CssClassSet_addAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $.CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this.readClasses$0();
  f.call$1(s);
  this.writeClasses$1(s);
},
 is$Collection: function() { return true; }
};

$$._MeasurementRequest = {"":"Object;computeValue,completer>,value=,exception=",
 computeValue$0: function() {
  return this.computeValue.call$0();
}
};

$$._MeasurementScheduler = {"":"Object;",
 _callback$0: function() {
  return this._callback.call$0();
},
 maybeSchedule$0: function() {
  if (this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = true;
  this._schedule$0();
},
 _onCallback$0: function() {
  if (!this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = false;
  this._callback$0();
}
};

$$._PostMessageScheduler = {"":"_MeasurementScheduler;_MEASUREMENT_MESSAGE,_nextMeasurementFrameScheduled,_callback",
 _schedule$0: function() {
  $.window().postMessage$2(this._MEASUREMENT_MESSAGE, "*");
},
 _handleMessage$1: function(e) {
  this._onCallback$0();
},
 get$_handleMessage: function() {
  return new $.BoundClosure0(this, '_handleMessage$1');
},
 _PostMessageScheduler$1: function(callback) {
  var t1 = $.window().get$on().get$message();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_handleMessage());
}
};

$$._MutationObserverScheduler = {"":"_MeasurementScheduler;_observer,_dummy,_nextMeasurementFrameScheduled,_callback",
 _schedule$0: function() {
  var t1 = this._dummy.get$hidden() !== true;
  this._dummy.set$hidden(t1);
},
 _handleMutation$2: function(mutations, observer) {
  this._onCallback$0();
},
 get$_handleMutation: function() {
  return new $.BoundClosure1(this, '_handleMutation$2');
},
 _MutationObserverScheduler$1: function(callback) {
  this._observer = $.MutationObserver_MutationObserver(this.get$_handleMutation());
  this._dummy = $.DivElement_DivElement();
  this._observer.observe$2$attributes(this._dummy, true);
}
};

$$._DOMWindowCrossFrame = {"":"Object;_window",
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1, t2;
  t1 = messagePorts == null;
  t2 = this._window;
  if (t1)
    t2.postMessage(message,targetOrigin);
  else
    t2.postMessage(message,targetOrigin,messagePorts);
},
 postMessage$2: function(message, targetOrigin) {
  return this.postMessage$3(message, targetOrigin, null);
}
};

$$.FixedSizeListIterator = {"":"_VariableSizeListIterator;_liblib0$_length,_array,_pos",
 get$hasNext: function() {
  return $.gt(this._liblib0$_length, this._pos);
}
};

$$._VariableSizeListIterator = {"":"Object;",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3, t4;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  t4 = this._pos;
  if (typeof t4 !== 'number')
    return this.next$0$bailout(2, t4, t3, t1);
  this._pos = t4 + 1;
  if (t4 !== (t4 | 0))
    throw $.iae(t4);
  if (t4 < 0 || t4 >= t1.length)
    throw $.ioore(t4);
  return t1[t4];
},
 next$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      t4 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      t4 = this._pos;
    case 2:
      var t1, t3, t4;
      state0 = 0;
      this._pos = $.add(t4, 1);
      return t3.operator$index$1(t1, t4);
  }
}
};

$$.FilteredElementList = {"":"Object;_node,_childNodes",
 get$_filtered: function() {
  var t1 = this._childNodes;
  return $.List_List$from($.getInterceptor$JSArray(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.getInterceptor$JSStringJSArray(this).get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$("Invalid list length"));
  this.removeRange$2(newLength, $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 get$add: function() {
  return new $.BoundClosure0(this, 'add$1');
},
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, this.get$add());
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 map$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).map$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 some$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).some$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  var t1 = this.get$_filtered();
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout3(1, index, t1);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout3: function(state0, index, t1) {
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
},
 iterator$0: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 get$last: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._AttributeClassSet = {"":"CssClassSet;_liblib1$_element>",
 readClasses$0: function() {
  var t1, classname, s, t2, t3, trimmed;
  t1 = this._liblib1$_element.get$attributes();
  classname = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, "class");
  s = $.Set_Set();
  if (classname == null)
    return s;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list = $.List_List$from(s);
  $.indexSet(this._liblib1$_element.get$attributes(), "class", $.Strings_join(list, " "));
}
};

$$.WebComponent = {"":"Object;_liblib$_element>",
 createShadowRoot$0: function() {
  if ($._realShadowRoot() === true)
    return this._liblib$_element.createShadowRoot$0();
  if (this._shadowRoots == null)
    this._shadowRoots = [];
  var t1 = this._shadowRoots;
  $.getInterceptor$JSArray(t1).add$1(t1, $.Element_Element$html("<div class=\"shadowroot\"></div>"));
  t1 = this._shadowRoots;
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 created$0: function() {
},
 inserted$0: function() {
},
 composeChildren$0: function() {
  var t1, treeStack, tree, pool, shadowInsertionPoints, shadowInsertionTrees, tree0, point, i;
  if ($._realShadowRoot() === true)
    return;
  t1 = this._shadowRoots;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    throw $.$$throw($.StateError$("Distribution algorithm requires at least one shadow root and can only be run once."));
  treeStack = this._shadowRoots;
  t1 = $.getInterceptor$JSArray(treeStack);
  tree = t1.removeLast$0(treeStack);
  pool = $.List_List$from(this.get$nodes());
  shadowInsertionPoints = [];
  shadowInsertionTrees = [];
  for (tree0 = tree; true;) {
    pool = this._distributeNodes$2(tree0, pool);
    point = tree0.query$1("shadow");
    if (!(point == null))
      if ($.gtB(t1.get$length(treeStack), 0)) {
        tree0 = t1.removeLast$0(treeStack);
        shadowInsertionPoints.push(point);
        shadowInsertionTrees.push(tree0);
      } else {
        $.WebComponent__distribute(point, pool);
        break;
      }
    else
      break;
  }
  for (i = 0; i < shadowInsertionPoints.length; ++i) {
    point = shadowInsertionPoints[i];
    if (i >= shadowInsertionTrees.length)
      throw $.ioore(i);
    $.WebComponent__distribute(point, $.List_List$from(shadowInsertionTrees[i].get$nodes()));
  }
  t1 = this.get$nodes();
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this.get$nodes();
  $.getInterceptor$JSArray(t1).addAll$1(t1, $.List_List$from(tree.get$nodes()));
},
 _distributeNodes$2: function(tree, pool) {
  var t1, t2, t3, select, matching, notMatching, t4;
  if (typeof pool !== 'object' || pool === null || pool.constructor !== Array || !!pool.fixed$length)
    return this._distributeNodes$2$bailout(1, tree, pool);
  for (t1 = tree.queryAll$1("content"), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!$.WebComponent__isActive(t2))
      continue;
    t3 = t2.get$attributes();
    select = $.getInterceptor$JSStringJSArray(t3).operator$index$1(t3, "select");
    if (typeof select !== 'string')
      return this._distributeNodes$2$bailout(2, t1, pool, select, t2);
    if (select === "")
      select = "*";
    matching = [];
    notMatching = [];
    for (t3 = $.CONSTANT0.iterator$0(pool); t3.get$hasNext() === true;) {
      t4 = t3.next$0();
      ($.WebComponent__matches(t4, select) === true ? matching : notMatching).push(t4);
    }
    if (matching.length === 0) {
      matching = t2.get$nodes();
      if (typeof matching !== 'object' || matching === null || matching.constructor !== Array || !!matching.fixed$length)
        return this._distributeNodes$2$bailout(3, matching, t1, notMatching, t2);
    }
    $.WebComponent__distribute(t2, matching);
    pool = notMatching;
  }
  return pool;
},
 _distributeNodes$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      pool = env1;
      tree = env0;
      break;
    case 2:
      t2 = env3;
      select = env2;
      pool = env1;
      t1 = env0;
      break;
    case 3:
      t2 = env3;
      notMatching = env2;
      t1 = env1;
      matching = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = tree.queryAll$1("content");
      t1 = $.getInterceptor$JSArray(t1).iterator$0(t1);
    default:
      var pool, tree, t1, t2, t3, select, matching, notMatching, t4;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(t1.get$hasNext() === true))
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t2 = t1.next$0();
                    if (!$.WebComponent__isActive(t2))
                      break c$0;
                    t3 = t2.get$attributes();
                    select = $.getInterceptor$JSStringJSArray(t3).operator$index$1(t3, "select");
                  case 2:
                    state0 = 0;
                    if (select == null || $.eqB(select, ""))
                      select = "*";
                    matching = [];
                    notMatching = [];
                    for (t3 = $.getInterceptor$JSArray(pool).iterator$0(pool); t3.get$hasNext() === true;) {
                      t4 = t3.next$0();
                      ($.WebComponent__matches(t4, select) === true ? matching : notMatching).push(t4);
                    }
                  case 3:
                    if (state0 === 3 || state0 === 0 && matching.length === 0)
                      switch (state0) {
                        case 0:
                          matching = t2.get$nodes();
                        case 3:
                          state0 = 0;
                      }
                    $.WebComponent__distribute(t2, matching);
                    pool = notMatching;
                }
              }
          }
      return pool;
  }
},
 get$nodes: function() {
  return this._liblib$_element.get$nodes();
},
 replaceWith$1: function(otherNode) {
  this._liblib$_element.replaceWith$1(otherNode);
},
 remove$0: function() {
  return this._liblib$_element.remove$0();
},
 set$text: function(v) {
  this._liblib$_element.set$text(v);
},
 insertBefore$2: function(newChild, refChild) {
  return this._liblib$_element.insertBefore$2(newChild, refChild);
},
 get$attributes: function() {
  return this._liblib$_element.get$attributes();
},
 get$children: function() {
  return this._liblib$_element.get$children();
},
 get$classes: function() {
  return this._liblib$_element.get$classes();
},
 getComputedStyle$1: function(pseudoElement) {
  return this._liblib$_element.getComputedStyle$1(pseudoElement);
},
 get$parent: function() {
  return this._liblib$_element.get$parent();
},
 get$parentNode: function() {
  return this._liblib$_element.get$parentNode();
},
 get$on: function() {
  return this._liblib$_element.get$on();
},
 get$hidden: function() {
  return this._liblib$_element.get$hidden();
},
 get$id: function() {
  return this._liblib$_element.get$id();
},
 set$innerHtml: function(v) {
  this._liblib$_element.set$innerHtml(v);
},
 click$0: function() {
  this._liblib$_element.click$0();
},
 get$click: function() {
  return new $.BoundClosure(this, 'click$0');
},
 get$style: function() {
  return this._liblib$_element.get$style();
},
 get$tagName: function() {
  return this._liblib$_element.get$tagName();
},
 query$1: function(selectors) {
  return this._liblib$_element.query$1(selectors);
},
 queryAll$1: function(selectors) {
  return this._liblib$_element.queryAll$1(selectors);
},
 get$$$dom_children: function() {
  return this._liblib$_element.get$$$dom_children();
},
 get$$$dom_className: function() {
  return this._liblib$_element.get$$$dom_className();
},
 set$$$dom_className: function(value) {
  this._liblib$_element.set$$$dom_className(value);
},
 get$$$dom_firstElementChild: function() {
  return this._liblib$_element.get$$$dom_firstElementChild();
},
 get$$$dom_lastElementChild: function() {
  return this._liblib$_element.get$$$dom_lastElementChild();
},
 $$dom_getAttribute$1: function(name$) {
  return this._liblib$_element.$$dom_getAttribute$1(name$);
},
 $$dom_hasAttribute$1: function(name$) {
  return this._liblib$_element.$$dom_hasAttribute$1(name$);
},
 $$dom_querySelector$1: function(selectors) {
  return this._liblib$_element.$$dom_querySelector$1(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this._liblib$_element.$$dom_querySelectorAll$1(selectors);
},
 $$dom_removeAttribute$1: function(name$) {
  return this._liblib$_element.$$dom_removeAttribute$1(name$);
},
 $$dom_setAttribute$2: function(name$, value) {
  return this._liblib$_element.$$dom_setAttribute$2(name$, value);
},
 get$$$dom_attributes: function() {
  return this._liblib$_element.get$$$dom_attributes();
},
 get$$$dom_childNodes: function() {
  return this._liblib$_element.get$$$dom_childNodes();
},
 get$$$dom_localName: function() {
  return this._liblib$_element.get$$$dom_localName();
},
 get$$$dom_namespaceUri: function() {
  return this._liblib$_element.get$$$dom_namespaceUri();
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  this._liblib$_element.$$dom_addEventListener$3(type, listener, useCapture);
},
 $$dom_appendChild$1: function(newChild) {
  return this._liblib$_element.$$dom_appendChild$1(newChild);
},
 $$dom_dispatchEvent$1: function(event$) {
  return this._liblib$_element.$$dom_dispatchEvent$1(event$);
},
 $$dom_removeChild$1: function(oldChild) {
  return this._liblib$_element.$$dom_removeChild$1(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  this._liblib$_element.$$dom_removeEventListener$3(type, listener, useCapture);
},
 $$dom_replaceChild$2: function(newChild, oldChild) {
  return this._liblib$_element.$$dom_replaceChild$2(newChild, oldChild);
},
 get$xtag: function() {
  return this._liblib$_element.get$xtag();
},
 set$xtag: function(value) {
  this._liblib$_element.set$xtag(value);
},
 append$1: function(e) {
  return this._liblib$_element.append$1(e);
},
 WebComponent$forElement$1: function(element) {
  if (element == null || !(this._liblib$_element.get$xtag() == null))
    throw $.$$throw($.ArgumentError$("element must be provided and not have its xtag property set"));
  this._liblib$_element.set$xtag(this);
},
 is$Element: function() { return true; }
};

$$.HeaderedContent = {"":"WebComponent;_root,_liblib$_element,_shadowRoots",
 created_autogenerated$0: function() {
  this._root = this.createShadowRoot$0();
  this._root.set$innerHtml("    \n    <style type=\"text/css\" scoped=\"\">\n    x-headered-content {\n      display: block;\n      border: 1px lightgray solid; border-radius: 10px; margin: 10px;\n    }\n    x-headered-content > header {\n      font-weight: bold;\n      color: #333;\n      background: lightgray;\n      margin: -1px 0 0 -1px;\n      border: 1px lightgray solid;\n      border-radius: 10px 0 10px 0;\n      padding: 15px;\n      display: inline-block;\n    }\n    .headered-content-content {\n      padding: 5px;\n    }\n    </style>\n    <content select=\"header\"></content>\n    <div class=\"headered-content-content\">\n    <content></content>\n    </div>\n    ");
},
 inserted_autogenerated$0: function() {
},
 composeChildren$0: function() {
  $.WebComponent.prototype.composeChildren$0.call(this);
  var t1 = this._root;
  if (!(typeof t1 === 'object' && t1 !== null && t1.is$ShadowRoot()))
    this._root = this;
}
};

$$.Tabs = {"":"WebComponent;_liblib8$_root,_liblib$_element,_shadowRoots",
 created_autogenerated$0: function() {
  this._liblib8$_root = this.createShadowRoot$0();
  this._liblib8$_root.set$innerHtml("    \n    <style type=\"text/css\" scoped=\"\">\n    x-tabs > .tabs {\n      border-bottom: 1px solid #ddd;\n    }\n    x-tabs > .tabs > x-tab {\n      border: 1px solid transparent;\n      display: inline-block;\n      padding: 8px;\n      margin-bottom: -1px;\n      cursor: pointer;\n      color: #666;\n    }\n    x-tabs > .tabs > x-tab:hover {\n      text-decoration: underline;\n      color: #999;\n    }\n    x-tabs > .tabs > x-tab[active] {\n      cursor: inherit;\n      color: black;\n      text-decoration: none;\n      border: 1px solid #ddd;\n      border-bottom: 1px solid white;\n      -webkit-border-radius: 4px 4px 0 0;\n      -moz-border-radius: 4px 4px 0 0;\n      border-radius: 4px 4px 0 0;\n    }\n    x-tabs > .content {\n      padding: 0 8px;\n    }\n    x-tabs > .content > * {\n      display: none;\n    }\n    x-tabs > .content > .active {\n      display: inherit;\n    }\n    </style>\n    <div class=\"tabs\">\n    <content select=\"x-tab\"></content>\n    </div>\n    <div class=\"content\">\n    <content></content>\n    </div>\n    ");
},
 inserted_autogenerated$0: function() {
},
 composeChildren$0: function() {
  $.WebComponent.prototype.composeChildren$0.call(this);
  var t1 = this._liblib8$_root;
  if (!(typeof t1 === 'object' && t1 !== null && t1.is$ShadowRoot()))
    this._liblib8$_root = this;
},
 created$0: function() {
  var t1 = this.get$on().get$click();
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_clickListener());
},
 inserted$0: function() {
  this._ensureAtMostOneTabActive$0();
},
 _clickListener$1: function(e) {
  var t1, target;
  t1 = e.get$target();
  if (typeof t1 === 'object' && t1 !== null && t1.is$Element()) {
    target = e.get$target();
    t1 = target.get$tagName();
    if ($.eqB($.getInterceptor$JSString(t1).toLowerCase$0(t1), "x-tab"))
      this._tabClick$1(target);
  }
},
 get$_clickListener: function() {
  return new $.BoundClosure0(this, '_clickListener$1');
},
 _tabClick$1: function(tabElement) {
  var tabs, t1, matchingTabs;
  tabs = this.queryAll$1("x-tabs > .tabs > x-tab");
  t1 = $.getInterceptor$JSArray(tabs);
  matchingTabs = t1.filter$1(tabs, new $.Tabs__tabClick_anon(tabElement));
  if ($.eqB($.getInterceptor$JSStringJSArray(matchingTabs).get$length(matchingTabs), 1)) {
    t1 = t1.filter$1(tabs, new $.Tabs__tabClick_anon0(tabElement));
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $.Tabs__tabClick_anon1());
    $.indexSet(tabElement.get$attributes(), "active", "active");
    this._updateContentForTab$1(tabElement);
  }
},
 _ensureAtMostOneTabActive$0: function() {
  var t1, tabs, t2;
  t1 = {};
  tabs = this.queryAll$1("x-tabs > .tabs > x-tab");
  t1.activeTab_0 = null;
  t2 = $.getInterceptor$JSArray(tabs);
  t2.forEach$1(tabs, new $.Tabs__ensureAtMostOneTabActive_anon(t1));
  if (t1.activeTab_0 == null && t2.get$isEmpty(tabs) !== true) {
    t1.activeTab_0 = t2.operator$index$1(tabs, 0);
    $.indexSet(t1.activeTab_0.get$attributes(), "active", "active");
  }
  this._updateContentForTab$1(t1.activeTab_0);
},
 _updateContentForTab$1: function(activeTab) {
  var t1, target;
  if (!(activeTab == null) && activeTab.get$attributes().containsKey$1("target") === true) {
    t1 = activeTab.get$attributes();
    target = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, "target");
  } else
    target = null;
  this._updateContent$1(target);
},
 _updateContent$1: function(target) {
  var t1, content$;
  t1 = {};
  content$ = this.queryAll$1("x-tabs > .content > *");
  t1.targetContent_0 = null;
  $.getInterceptor$JSArray(content$).forEach$1(content$, new $.Tabs__updateContent_anon(t1, target));
}
};

$$._Enum = {"":"Object;",
 toString$0: function() {
  return this.name;
}
};

$$.Css3TransitionEffect = {"":"ShowHideEffect;",
 startShow$4: function(element, desiredDuration, timing, size) {
  return this._startAnimation$7(true, element, desiredDuration, this._hideValue, this._showValue, timing, size);
},
 startHide$4: function(element, desiredDuration, timing, size) {
  return this._startAnimation$7(false, element, desiredDuration, this._showValue, this._hideValue, timing, size);
},
 overrideStartEndValues$4: function(showValue, property, originalValue, size) {
  return originalValue;
},
 clearAnimation$1: function(element) {
  var restoreValues = $._css3TransitionEffectValues_cleanup(element);
  element.get$style().set$transitionTimingFunction("");
  element.get$style().set$transitionProperty("");
  element.get$style().set$transitionDuration("");
  $.getInterceptor$JSArray(restoreValues).forEach$1(restoreValues, new $.Css3TransitionEffect_clearAnimation_anon(element));
},
 get$clearAnimation: function() {
  return new $.BoundClosure0(this, 'clearAnimation$1');
},
 _startAnimation$7: function(doingShow, element, desiredDuration, startValue, endValue, timing, size) {
  var t1, t2, localPropsToKeep, t3, localValues;
  t1 = {};
  t1.endValue_0 = endValue;
  t2 = this._property;
  localPropsToKeep = [t2];
  t3 = this._animatingOverrides;
  $.CONSTANT0.addAll$1(localPropsToKeep, t3.get$keys());
  localValues = $.Css3TransitionEffect__recordProperties(element, localPropsToKeep);
  $.getInterceptor$JSArray(t3).forEach$1(t3, new $.Css3TransitionEffect__startAnimation_anon(element));
  if (!(size == null)) {
    startValue = this.overrideStartEndValues$4(!doingShow, t2, startValue, size);
    t1.endValue_0 = this.overrideStartEndValues$4(doingShow, t2, t1.endValue_0, size);
  }
  element.get$style().setProperty$2(t2, startValue);
  $._css3TransitionEffectValues_delayStart(element, localValues, new $.Css3TransitionEffect__startAnimation_anon0(t1, this, element, desiredDuration, timing));
  return desiredDuration;
},
 _setShowValue$4: function(element, value, desiredDuration, timing) {
  var cssTimingValue, t1, t2;
  cssTimingValue = $.CssEffectTiming__getCssValue(timing);
  element.get$style().set$transitionTimingFunction(cssTimingValue);
  t1 = this._property;
  element.get$style().set$transitionProperty(t1);
  t2 = $.S(desiredDuration) + "ms";
  element.get$style().set$transitionDuration(t2);
  element.get$style().setProperty$2(t1, value);
},
 Css3TransitionEffect$4: function(_property, _hideValue, _showValue, animatingOverrides) {
}
};

$$._css3TransitionEffectValues = {"":"Object;element>,originalValues,timeoutHandle<",
 _cleanup$0: function() {
  if (!(this.timeoutHandle == null)) {
    $.window().clearTimeout$1(this.timeoutHandle);
    this.timeoutHandle = null;
  }
  return this.originalValues;
}
};

$$.FadeEffect = {"":"Css3TransitionEffect;_property,_hideValue,_showValue,_animatingOverrides"
};

$$.ShrinkEffect = {"":"Css3TransitionEffect;_property,_hideValue,_showValue,_animatingOverrides",
 overrideStartEndValues$4: function(showValue, property, originalValue, size) {
  var t1;
  if ($.eqB(property, "max-height") && showValue) {
    t1 = size.get$height();
    return $.S($.getInterceptor$JSNumber(t1).toInt$0(t1)) + "px";
  } else
    return originalValue;
}
};

$$.EffectTiming = {"":"Object;"
};

$$.CssEffectTiming = {"":"EffectTiming;cssName",
 is$CssEffectTiming: true
};

$$.ShowHideAction = {"":"_Enum;name"
};

$$._ShowHideValues = {"":"Object;initialComputedDisplay>,initialLocalDisplay>,currentState=,_cachedSize",
 get$cachedSize: function() {
  return this._cachedSize;
},
 set$cachedSize: function(value) {
  if (value.get$isValid() === true)
    this._cachedSize = value;
}
};

$$._AnimatingValues = {"":"Object;_liblib4$_element>,_cleanupAction,_finishFunc,_completer,_setTimeoutHandle",
 _cleanupAction$1: function(arg0) {
  return this._cleanupAction.call$1(arg0);
},
 _finishFunc$1: function(arg0) {
  return this._finishFunc.call$1(arg0);
},
 _start$1: function(durationMS) {
  this._setTimeoutHandle = $.window().setTimeout$2(this.get$_liblib4$_complete(), durationMS);
  return this._completer.get$future();
},
 _cancel$0: function() {
  $.window().clearTimeout$1(this._setTimeoutHandle);
  var t1 = this._liblib4$_element;
  this._cleanupAction$1(t1);
  $.indexSet($.get$_AnimatingValues__aniValues(), t1, null);
  this._completer.complete$1(false);
},
 _liblib4$_complete$0: function() {
  var t1 = this._liblib4$_element;
  this._cleanupAction$1(t1);
  $.indexSet($.get$_AnimatingValues__aniValues(), t1, null);
  this._finishFunc$1(t1);
  this._completer.complete$1(true);
},
 get$_liblib4$_complete: function() {
  return new $.BoundClosure(this, '_liblib4$_complete$0');
},
 _cleanup$0: function() {
  var t1 = this._liblib4$_element;
  this._cleanupAction$1(t1);
  $.indexSet($.get$_AnimatingValues__aniValues(), t1, null);
},
 _AnimatingValues$_internal$3: function(_element, _cleanupAction, _finishFunc) {
  $.indexSet($.get$_AnimatingValues__aniValues(), this._liblib4$_element, this);
}
};

$$.ShowHideEffect = {"":"Object;",
 startShow$4: function(element, desiredDuration, timing, size) {
  return 0;
},
 startHide$4: function(element, desiredDuration, timing, size) {
  return 0;
},
 clearAnimation$1: function(element) {
},
 get$clearAnimation: function() {
  return new $.BoundClosure0(this, 'clearAnimation$1');
}
};

$$.ShowHideState = {"":"_Enum;name"
};

$$.DetailedArgumentError = {"":"Object;argument,details",
 get$message: function() {
  return "Illegal argument: \"" + this.argument + "\" -- " + this.details;
},
 toString$0: function() {
  return this.get$message();
},
 DetailedArgumentError$2: function(argument, details) {
  $.requireArgumentNotNullOrEmpty(this.argument, "argument");
  $.requireArgumentNotNullOrEmpty(this.details, "details");
}
};

$$.InvalidOperationError = {"":"Object;message>"
};

$$.Size = {"":"Object;width>,height>",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 get$area: function() {
  return $.mul(this.width, this.height);
},
 isEmpty$0: function() {
  return $.eq(this.get$area(), 0);
},
 get$isEmpty: function() {
  return new $.BoundClosure(this, 'isEmpty$0');
},
 get$isValid: function() {
  var t1, t2;
  t1 = this.width;
  if ($.isValidNumber(t1)) {
    t2 = this.height;
    t1 = $.isValidNumber(t2) && $.geB(t1, 0) && $.geB(t2, 0);
  } else
    t1 = false;
  return t1;
},
 scale$1: function(magnitude) {
  return $.Size$($.mul(this.width, magnitude), $.mul(this.height, magnitude));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 toString$0: function() {
  return "(" + $.S(this.width) + " x " + $.S(this.height) + ")";
}
};

$$.Accordion = {"":"WebComponent;_liblib7$_root,_liblib$_element,_shadowRoots",
 created_autogenerated$0: function() {
  this._liblib7$_root = this.createShadowRoot$0();
  this._liblib7$_root.set$innerHtml("    \n    <style type=\"text/css\" scoped=\"\">\n    .accordion-group-x {\n      margin-bottom: 2px;\n      border: 1px solid #e5e5e5;\n      -webkit-border-radius: 4px;\n      -moz-border-radius: 4px;\n      border-radius: 4px;\n    }\n    .accordion-group-x > header {\n      display: block;\n      padding: 8px 15px;\n      cursor: pointer;\n    }\n    .accordion-body-x {\n      border-top: 1px solid #e5e5e5;\n    }\n    </style>\n    <content select=\"header\"></content>\n    <content></content>\n    ");
},
 inserted_autogenerated$0: function() {
},
 composeChildren$0: function() {
  $.WebComponent.prototype.composeChildren$0.call(this);
  var t1 = this._liblib7$_root;
  if (!(typeof t1 === 'object' && t1 !== null && t1.is$ShadowRoot()))
    this._liblib7$_root = this;
},
 created$0: function() {
  var t1 = this.get$on();
  t1 = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, "open");
  $.getInterceptor$JSArray(t1).add$1(t1, this.get$_liblib7$_onOpen());
},
 inserted$0: function() {
  var t1 = this.queryAll$1("x-expander");
  t1 = $.getInterceptor$JSArray(t1).map$1(t1, new $.Accordion_inserted_anon());
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.Accordion_inserted_anon0());
},
 _liblib7$_onOpen$1: function(openEvent) {
  var t1 = openEvent.get$target();
  if (typeof t1 === 'object' && t1 !== null && t1.is$UnknownElement())
    this._onExpanderOpen$1(openEvent.get$target().get$xtag());
},
 get$_liblib7$_onOpen: function() {
  return new $.BoundClosure0(this, '_liblib7$_onOpen$1');
},
 _onExpanderOpen$1: function(expander) {
  var t1 = this.queryAll$1("x-accordion > x-expander");
  t1 = $.getInterceptor$JSArray(t1).map$1(t1, new $.Accordion__onExpanderOpen_anon());
  t1 = $.getInterceptor$JSArray(t1).filter$1(t1, new $.Accordion__onExpanderOpen_anon0(expander));
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.Accordion__onExpanderOpen_anon1());
}
};

$$.Expander = {"":"WebComponent;_liblib6$_root,_onOpen>,_isExpanded,_expanderDiv,_header,_liblib$_element,_shadowRoots",
 created_autogenerated$0: function() {
  this._liblib6$_root = this.createShadowRoot$0();
  this._liblib6$_root.set$innerHtml("    \n    <style type=\"text/css\" scoped=\"\">\n    x-expander {\n      display: block;\n      margin-bottom: 2px;\n      border: 1px solid #e5e5e5;\n      -webkit-border-radius: 4px;\n      -moz-border-radius: 4px;\n      border-radius: 4px;\n    }\n    \n    x-expander > header {\n      padding: 8px 15px;\n      cursor: pointer;\n    }\n    \n    x-expander > header:hover {\n      text-decoration: underline;\n    }\n    \n    x-expander > .expander-body-x > .expander-inner-x {\n      padding: 9px 15px;\n      border-top: 1px solid #e5e5e5;\n    }\n    </style>\n    <content select=\"header\"></content>\n    <div class=\"expander-body-x\">\n    <div class=\"expander-inner-x\">\n    <content></content>\n    </div>\n    </div>\n    ");
},
 inserted_autogenerated$0: function() {
},
 composeChildren$0: function() {
  $.WebComponent.prototype.composeChildren$0.call(this);
  var t1 = this._liblib6$_root;
  if (!(typeof t1 === 'object' && t1 !== null && t1.is$ShadowRoot()))
    this._liblib6$_root = this;
},
 get$isExpanded: function() {
  return this._isExpanded;
},
 set$isExpanded: function(value) {
  if (!$.eqB(value, this._isExpanded)) {
    this._isExpanded = value;
    this._updateElements$0();
    if (this._isExpanded === true)
      this._raiseOpen$0();
  }
},
 get$onOpen: function() {
  if (this._onOpen == null) {
    var t1 = $.WebComponent.prototype.get$on.call(this);
    this._onOpen = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, "open");
  }
  return this._onOpen;
},
 inserted$0: function() {
  var t1, t2;
  this._expanderDiv = this.query$1(".expander-body-x");
  this._updateElements$1(true);
  this._header = this.query$1("header");
  t1 = this._header;
  if (!(t1 == null)) {
    t2 = t1.get$on().get$click();
    $.getInterceptor$JSArray(t2).add$1(t2, new $.Expander_inserted_anon(this));
  }
},
 _raiseOpen$0: function() {
  this.get$onOpen().dispatch$1($.Event_Event("open", true, true));
},
 _updateElements$1: function(skipAnimation) {
  var action, effect;
  if (!(this._expanderDiv == null)) {
    action = this._isExpanded ? $.CONSTANT6 : $.CONSTANT7;
    effect = skipAnimation === true ? null : $.get$Expander__effect();
    $.ShowHide_begin(action, this._expanderDiv, null, effect, null);
  }
},
 _updateElements$0: function() {
  return this._updateElements$1(false);
}
};

$$.Dropdown = {"":"WebComponent;_liblib5$_root,_dropdownDivSelector,_headerOpenClass,_liblib5$_isExpanded,_liblib5$_expanderDiv,_headerElem,_liblib$_element,_shadowRoots",
 created_autogenerated$0: function() {
  this._liblib5$_root = this.createShadowRoot$0();
  this._liblib5$_root.set$innerHtml("    \n    <style type=\"text/css\" scoped=\"\">\n    x-dropdown {\n      position: relative;\n    }\n    x-dropdown > button {\n    }\n    .dropdown-toggle-x {\n    }\n    .dropdown-content-x {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      z-index: 1000;\n      display: none;\n      float: left;\n      min-width: 160px;\n      padding: 5px 0;\n      margin: 2px 0 0;\n      list-style: none;\n      background-color: #ffffff;\n      border: 1px solid #ccc;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      -webkit-border-radius: 6px;\n      -moz-border-radius: 6px;\n      border-radius: 6px;\n      -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n      -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n      -webkit-background-clip: padding-box;\n      -moz-background-clip: padding;\n      background-clip: padding-box;\n    }\n    </style>\n    <content select=\"button\"></content>\n    <div class=\"dropdown-content-x\">\n    <content></content>\n    </div>\n    ");
},
 inserted_autogenerated$0: function() {
},
 composeChildren$0: function() {
  $.WebComponent.prototype.composeChildren$0.call(this);
  var t1 = this._liblib5$_root;
  if (!(typeof t1 === 'object' && t1 !== null && t1.is$ShadowRoot()))
    this._liblib5$_root = this;
},
 get$isExpanded: function() {
  return this._liblib5$_isExpanded;
},
 set$isExpanded: function(value) {
  var t1, action, t2, t3;
  if (!$.eqB(value, this._liblib5$_isExpanded)) {
    this._liblib5$_isExpanded = value;
    t1 = this._liblib5$_isExpanded === true;
    action = t1 ? $.CONSTANT6 : $.CONSTANT7;
    t2 = this._headerElem;
    t3 = this._headerOpenClass;
    if (t1) {
      t1 = t2.get$classes();
      $.getInterceptor$JSArray(t1).add$1(t1, t3);
    } else
      t2.get$classes().remove$1(t3);
    $.ShowHide_begin(action, this._liblib5$_expanderDiv, null, $.get$Dropdown__effect(), null);
  }
},
 inserted$0: function() {
  var t1, t2;
  this._liblib5$_expanderDiv = this.query$1(this._dropdownDivSelector);
  this._headerElem = this.query$1("x-dropdown > button");
  t1 = this._headerElem;
  if (!(t1 == null)) {
    t2 = t1.get$on().get$click();
    $.getInterceptor$JSArray(t2).add$1(t2, new $.Dropdown_inserted_anon(this));
  }
}
};

$$.Tabs__ensureAtMostOneTabActive_anon = {"":"Closure;box_0",
 call$1: function(tab) {
  var t1;
  if (tab.get$attributes().containsKey$1("active") === true) {
    t1 = this.box_0;
    if (t1.activeTab_0 == null)
      t1.activeTab_0 = tab;
    else
      tab.get$attributes().remove$1("active");
  }
}
};

$$.Tabs__updateContent_anon = {"":"Closure;box_0,target_1",
 call$1: function(contentElement) {
  var t1, t2;
  if ($.eqB(contentElement.get$id(), this.target_1) && this.box_0.targetContent_0 == null) {
    t1 = this.box_0;
    t1.targetContent_0 = contentElement;
    t2 = t1.targetContent_0.get$classes();
    $.getInterceptor$JSArray(t2).add$1(t2, "active");
  } else
    contentElement.get$classes().remove$1("active");
}
};

$$.CssClassSet_clear_anon = {"":"Closure;",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).clear$0(s);
}
};

$$.Maps__emitMap_anon = {"":"Closure;box_0,result_1,visiting_2",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_0 !== true) {
    t2 = this.result_1;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_0 = false;
  t1 = this.result_1;
  t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$._HashSetImpl_forEach_anon = {"":"Closure;f_0",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$.CssClassSet_add_anon = {"":"Closure;value_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).add$1(s, this.value_0);
}
};

$$.ConstantMap_forEach_anon = {"":"Closure;this_0,f_1",
 call$1: function(key) {
  var t1, t2;
  t1 = this.f_1;
  t2 = this.this_0;
  return t1.call$2(key, $.getInterceptor$JSStringJSArray(t2).operator$index$1(t2, key));
}
};

$$._LinkedHashMapImpl_forEach_anon = {"":"Closure;f_0",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {"":"Closure;box_0",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_0 = $.add(t1.counter_0, 1);
}
};

$$.NoSuchMethodError_toString_anon = {"":"Closure;box_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_1, 0)) {
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_1 = $.add(t1.i_1, 1);
}
};

$$.Expander_inserted_anon = {"":"Closure;this_0",
 call$1: function(_) {
  var t1 = this.this_0;
  t1.set$isExpanded(t1.get$isExpanded() !== true);
  return;
}
};

$$.invokeClosure_anon = {"":"Closure;closure_0",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":"Closure;closure_1,arg1_2",
 call$0: function() {
  return this.closure_1.call$1(this.arg1_2);
}
};

$$.invokeClosure_anon1 = {"":"Closure;closure_3,arg1_4,arg2_5",
 call$0: function() {
  return this.closure_3.call$2(this.arg1_4, this.arg2_5);
}
};

$$.ShowHide_begin_anon = {"":"Closure;action_0",
 call$1: function(oldState) {
  return $.ShowHide__getToggleState(this.action_0, oldState);
}
};

$$.ShowHide_begin_anon0 = {"":"Closure;element_1,effect_2,duration_3,effectTiming_4",
 call$1: function(doShow) {
  return $.ShowHide__requestEffect(doShow, this.element_1, this.duration_3, this.effect_2, this.effectTiming_4);
}
};

$$.ShowHide__populateState_anon = {"":"Closure;currentValues_0",
 call$1: function(_) {
  return this.currentValues_0.get$currentState();
}
};

$$.ShowHide__populateState_anon0 = {"":"Closure;element_1",
 call$1: function(items) {
  var t1, computedStyle, tagDefaultDisplay, t2, localDisplay, computedDisplay, inferredState, size;
  t1 = $.getInterceptor$JSStringJSArray(items);
  computedStyle = t1.operator$index$1(items, 0);
  tagDefaultDisplay = t1.operator$index$1(items, 1);
  t1 = $.get$ShowHide__defaultDisplays();
  t2 = this.element_1;
  t1.putIfAbsent$2(t2.get$tagName(), new $.ShowHide__populateState__anon(tagDefaultDisplay));
  localDisplay = t2.get$style().get$display();
  computedDisplay = computedStyle.get$display();
  inferredState = $.eqB(computedDisplay, "none") ? $.CONSTANT10 : $.CONSTANT11;
  size = $.Tools_getSize(computedStyle);
  $.indexSet($.get$ShowHide__values(), t2, $._ShowHideValues$(computedDisplay, localDisplay, inferredState, size));
  return inferredState;
}
};

$$.ShowHide__populateState__anon = {"":"Closure;tagDefaultDisplay_2",
 call$0: function() {
  return this.tagDefaultDisplay_2;
}
};

$$.Tools_getDefaultDisplay_anon = {"":"Closure;nodeName_0",
 call$1: function(defaultDisplay) {
  if ($.eqB(defaultDisplay, "none") || $.eqB(defaultDisplay, ""))
    return $.Tools__defaultDisplayHard(this.nodeName_0);
  else
    return $.Future_Future$immediate(defaultDisplay);
}
};

$$.Tools_getDefaultDisplay_anon0 = {"":"Closure;",
 call$1: function(value) {
  return value;
}
};

$$.Tools__actualDisplay_anon = {"":"Closure;elem_0",
 call$1: function(css) {
  var value = css.get$display();
  this.elem_0.remove$0();
  return value;
}
};

$$.FilteredElementList__filtered_anon = {"":"Closure;",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._HashSetImpl_filter_anon = {"":"Closure;f_0,result_1",
 call$2: function(key, value) {
  var t1;
  if (this.f_0.call$1(key) === true) {
    t1 = this.result_1;
    $.getInterceptor$JSArray(t1).add$1(t1, key);
  }
}
};

$$._ChildrenElementList_filter_anon = {"":"Closure;f_0,output_1",
 call$1: function(element) {
  var t1;
  if (this.f_0.call$1(element) === true) {
    t1 = this.output_1;
    $.getInterceptor$JSArray(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList_removeRange_anon = {"":"Closure;",
 call$1: function(el) {
  return el.remove$0();
}
};

$$._FutureImpl_chain_anon = {"":"Closure;this_0,transformation_1,completer_2",
 call$1: function(v, exception) {
  var future, t1, ex, stackTrace;
  future = null;
  try {
    future = this.transformation_1.call$1(v);
  } catch (exception) {
    t1 = $.unwrapException(exception);
    ex = t1;
    stackTrace = $.getTraceFromException(exception);
    this.completer_2.completeException$2(ex, stackTrace);
    return;
  }

  this.this_0._forward$2(future, this.completer_2);
}
};

$$._FutureImpl__forwardException_anon = {"":"Closure;future_0,completer_1",
 call$1: function(e) {
  this.completer_1.completeException$2(e, this.future_0.get$stackTrace());
  return false;
}
};

$$._FutureImpl_transform_anon = {"":"Closure;transformation_0,completer_1",
 call$1: function(v, exception) {
  var transformed, t1, e, stackTrace;
  transformed = null;
  try {
    transformed = this.transformation_0.call$1(v);
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    stackTrace = $.getTraceFromException(exception);
    this.completer_1.completeException$2(e, stackTrace);
    return;
  }

  this.completer_1.complete$1(transformed);
}
};

$$.Element_getComputedStyle_anon = {"":"Closure;this_0,pseudoElement_1",
 call$0: function() {
  return $.window().$$dom_getComputedStyle$2(this.this_0, this.pseudoElement_1);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"":"Closure;values_1,copies_2",
 call$1: function(value) {
  var t1, t3, length$, i, t2;
  t1 = this.values_1;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t3.add$1(t1, value);
  t1 = this.copies_2;
  $.getInterceptor$JSArray(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env3;
      t3 = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_1;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      length$ = t3.get$length(t1);
    case 2:
      var t1, value, t3, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = t3.operator$index$1(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor$JSArray(t1).add$1(t1, value);
      t1 = this.copies_2;
      $.getInterceptor$JSArray(t1).add$1(t1, null);
      return length$;
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"":"Closure;copies_3",
 call$1: function(i) {
  var t1 = this.copies_3;
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"":"Closure;copies_4",
 call$2: function(i, x) {
  $.indexSet(this.copies_4, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"":"Closure;",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"":"Closure;findSlot_5,readSlot_6,writeSlot_7",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, copy0, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_5.call$1(e);
    t1.copy_0 = this.readSlot_6.call$1(slot);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = {};
    this.writeSlot_7.call$2(slot, t1.copy_0);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
    return t1.copy_0;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_5.call$1(e);
    t2 = this.readSlot_6;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_7.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_7;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy0 = t2.call$1(slot);
          if (true === copy0) {
            copy0 = new Array(length$);
            t3.call$2(slot, copy0);
          }
          if (typeof copy0 !== 'object' || copy0 === null || (copy0.constructor !== Array || !!copy0.immutable$list) && !copy0.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(3, e, t3, elementCopy, $.CONSTANT0, length$, copy0, slot, t2, copy, i);
          for (t1 = e.length, t2 = copy0.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy0[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy0[i] = elementCopy;
          ++i;
          copy = copy0;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(4, e, i, length$, copy, $.CONSTANT0);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$("structured clone of other type"));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      t2 = env2;
      length$ = env1;
      e = env0;
      break;
    case 3:
      i = env9;
      copy = env8;
      t4 = env7;
      slot = env6;
      copy0 = env5;
      length$ = env4;
      t2 = env3;
      elementCopy = env2;
      t3 = env1;
      e = env0;
      break;
    case 4:
      t2 = env4;
      copy = env3;
      length$ = env2;
      i = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_5.call$1(e);
        t1.copy_0 = this.readSlot_6.call$1(slot);
        t2 = t1.copy_0;
        if (!(t2 == null))
          return t2;
        t1.copy_0 = {};
        this.writeSlot_7.call$2(slot, t1.copy_0);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
        return t1.copy_0;
      }
    default:
      var t1, slot, t2, e, length$, t4, copy, t3, i, element, elementCopy, copy0, j;
      if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            t2 = $.getInterceptor$JSStringJSArray(e);
            length$ = t2.get$length(e);
          case 2:
            state0 = 0;
            slot = this.findSlot_5.call$1(e);
            t4 = this.readSlot_6;
            copy = t4.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_7.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t3 = this.writeSlot_7;
          case 3:
            if (state0 === 3 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  i = 0;
                case 3:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = t2.operator$index$1(e, i);
                          elementCopy = this.call$1(element);
                        case 3:
                          if (state0 === 3 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy0 = t4.call$1(slot);
                                if (true === copy0) {
                                  copy0 = new Array(length$);
                                  t3.call$2(slot, copy0);
                                }
                              case 3:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy0, j, t2.operator$index$1(e, j));
                                $.indexSet(copy0, i, elementCopy);
                                ++i;
                                copy = copy0;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 4:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1(t2.operator$index$1(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$("structured clone of other type"));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"":"Closure;box_0,walk_8",
 call$2: function(key, value) {
  this.box_0.copy_0[key] = this.walk_8.call$1(value);
}
};

$$.MutationObserver_observe_anon = {"":"Closure;parsedOptions_0",
 call$2: function(k, v) {
  if ($.CONSTANT8.containsKey$1(k) === true)
    this.parsedOptions_0[k] = true === v;
  else if ($.eqB(k, "attributeFilter"))
    this.parsedOptions_0[k] = v;
  else
    throw $.$$throw($.ArgumentError$("Illegal MutationObserver.observe option '" + $.S(k) + "'"));
}
};

$$.MutationObserver_observe_override = {"":"Closure;parsedOptions_1",
 call$2: function(key, value) {
  if (!(value == null))
    this.parsedOptions_1[key] = value;
}
};

$$._emptyStyleFuture_anon = {"":"Closure;",
 call$0: function() {
  return $.Element_Element$tag("div").get$style();
}
};

$$.Futures_wait_anon = {"":"Closure;box_0,completer_1,result_2,values_3,pos_4",
 call$1: function(value) {
  var t1, t2, remaining;
  t1 = this.values_3;
  $.indexSet(t1, this.pos_4, value);
  t2 = this.box_0;
  remaining = $.sub(t2.remaining_0, 1);
  t2.remaining_0 = remaining;
  if ($.eqB(remaining, 0) && this.result_2.get$isComplete() !== true)
    this.completer_1.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"":"Closure;completer_5,result_6,future_7",
 call$1: function(exception) {
  if (this.result_6.get$isComplete() !== true)
    this.completer_5.completeException$2(exception, this.future_7.get$stackTrace());
  return true;
}
};

$$.ShowHide__updateCachedSize_anon = {"":"Closure;values_0",
 call$1: function(size) {
  this.values_0.set$cachedSize(size);
  return size;
}
};

$$.Css3TransitionEffect_clearAnimation_anon = {"":"Closure;element_0",
 call$2: function(p, v) {
  this.element_0.get$style().setProperty$2(p, v);
}
};

$$.Css3TransitionEffect__startAnimation_anon = {"":"Closure;element_1",
 call$2: function(p, v) {
  this.element_1.get$style().setProperty$2(p, v);
}
};

$$.Css3TransitionEffect__startAnimation_anon0 = {"":"Closure;box_0,this_2,element_3,desiredDuration_4,timing_5",
 call$0: function() {
  return this.this_2._setShowValue$4(this.element_3, this.box_0.endValue_0, this.desiredDuration_4, this.timing_5);
}
};

$$._css3TransitionEffectValues_delayStart_anon = {"":"Closure;action_0,value_1",
 call$0: function() {
  this.value_1.set$timeoutHandle(null);
  this.action_0.call$0();
}
};

$$.CssClassSet_addAll_anon = {"":"Closure;collection_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).addAll$1(s, this.collection_0);
}
};

$$._HashSetImpl_addAll_anon = {"":"Closure;this_0",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$.Storage_keys_anon = {"":"Closure;keys_0",
 call$2: function(k, v) {
  var t1 = this.keys_0;
  return $.getInterceptor$JSArray(t1).add$1(t1, k);
}
};

$$._HashMapImpl_keys_anon = {"":"Closure;box_0,list_1",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_1;
  t2 = this.box_0;
  t3 = t2.i_0;
  t2.i_0 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$._LinkedHashMapImpl_keys_anon = {"":"Closure;box_0,list_1",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_1;
  t2 = this.box_0;
  t3 = t2.index_0;
  t2.index_0 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._HashMapImpl__HashMapImpl$from_anon = {"":"Closure;result_0",
 call$2: function(key, value) {
  $.indexSet(this.result_0, key, value);
}
};

$$.Accordion_inserted_anon = {"":"Closure;",
 call$1: function(e) {
  return e.get$xtag();
}
};

$$.Accordion_inserted_anon0 = {"":"Closure;",
 call$1: function(e) {
  e.set$isExpanded(false);
}
};

$$._HashSetImpl_map_anon = {"":"Closure;f_0,result_1",
 call$2: function(key, value) {
  var t1 = this.result_1;
  $.getInterceptor$JSArray(t1).add$1(t1, this.f_0.call$1(key));
}
};

$$.Dropdown_inserted_anon = {"":"Closure;this_0",
 call$1: function(_) {
  var t1 = this.this_0;
  t1.set$isExpanded(t1.get$isExpanded() !== true);
  return;
}
};

$$.WebComponent__matches_anon = {"":"Closure;node_0",
 call$1: function(n) {
  return $.eq(n, this.node_0);
}
};

$$.Accordion__onExpanderOpen_anon = {"":"Closure;",
 call$1: function(e) {
  return e.get$xtag();
}
};

$$.Accordion__onExpanderOpen_anon0 = {"":"Closure;expander_0",
 call$1: function(e) {
  return !$.eqB(e, this.expander_0);
}
};

$$.Accordion__onExpanderOpen_anon1 = {"":"Closure;",
 call$1: function(e) {
  e.set$isExpanded(false);
}
};

$$.Tabs__tabClick_anon = {"":"Closure;tabElement_0",
 call$1: function(e) {
  return $.eq(e, this.tabElement_0);
}
};

$$.Tabs__tabClick_anon0 = {"":"Closure;tabElement_1",
 call$1: function(e) {
  return !$.eqB(e, this.tabElement_1);
}
};

$$.Tabs__tabClick_anon1 = {"":"Closure;",
 call$1: function(e) {
  e.get$attributes().remove$1("active");
}
};

$$.BoundClosure = {"":"Closure;self,target", call$0: function() {
  return this.self[this.target]();
}
};
$$.BoundClosure0 = {"":"Closure;self,target", call$1: function(p0) {
  return this.self[this.target](p0);
}
};
$$.BoundClosure1 = {"":"Closure;self,target", call$2: function(p0, p1) {
  return this.self[this.target](p0, p1);
}
};
$.Accordion$forElement = function(e) {
  var t1 = new $.Accordion(null, e, null);
  t1.WebComponent$forElement$1(e);
  return t1;
};

$.Dropdown$forElement = function(e) {
  var t1 = new $.Dropdown(null, ".dropdown-content-x", "dropdown-toggle-x", false, null, null, e, null);
  t1.WebComponent$forElement$1(e);
  return t1;
};

$.Expander$forElement = function(e) {
  var t1 = new $.Expander(null, null, true, null, null, e, null);
  t1.WebComponent$forElement$1(e);
  return t1;
};

$.HeaderedContent$forElement = function(e) {
  var t1 = new $.HeaderedContent(null, e, null);
  t1.WebComponent$forElement$1(e);
  return t1;
};

$.Tabs$forElement = function(e) {
  var t1 = new $.Tabs(null, e, null);
  t1.WebComponent$forElement$1(e);
  return t1;
};

$.main = function() {
};

$.init_autogenerated = function() {
  var _root, __e1, __e0, t1, __e6, __e5, __e2, __e3, __e4, __e8, __e7, __e10, __e9, __e12, __e11;
  _root = $.document().get$body();
  __e1 = _root.query$1("#__e-1");
  __e0 = __e1.query$1("#__e-0");
  __e0.query$1("#tab1");
  __e0.query$1("#tab2");
  __e0.query$1("#tab3");
  t1 = $.Tabs$forElement(__e0);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  t1 = $.HeaderedContent$forElement(__e1);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  __e6 = _root.query$1("#__e-6");
  __e5 = __e6.query$1("#__e-5");
  __e2 = __e5.query$1("#__e-2");
  t1 = $.Expander$forElement(__e2);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  __e3 = __e5.query$1("#__e-3");
  t1 = $.Expander$forElement(__e3);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  __e4 = __e5.query$1("#__e-4");
  t1 = $.Expander$forElement(__e4);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  t1 = $.Accordion$forElement(__e5);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  t1 = $.HeaderedContent$forElement(__e6);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  __e8 = _root.query$1("#__e-8");
  __e7 = __e8.query$1("#__e-7");
  t1 = $.HeaderedContent$forElement(__e7);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  t1 = $.HeaderedContent$forElement(__e8);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  __e10 = _root.query$1("#__e-10");
  __e9 = __e10.query$1("#__e-9");
  t1 = $.Expander$forElement(__e9);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  t1 = $.HeaderedContent$forElement(__e10);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  __e12 = _root.query$1("#__e-12");
  __e11 = __e12.query$1("#__e-11");
  t1 = $.Dropdown$forElement(__e11);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  t1 = $.HeaderedContent$forElement(__e12);
  t1.created_autogenerated$0();
  t1.created$0();
  t1.composeChildren$0();
  t1 = __e1.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e0.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e6.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e5.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e2.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e3.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e4.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e8.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e7.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e10.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e9.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e12.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
  t1 = __e11.get$xtag();
  t1.inserted$0();
  t1.inserted_autogenerated$0();
};

$.main0 = function() {
  $.main();
  $.init_autogenerated();
};

$.Strings__toJsStringArray = function(strings) {
  var t1, length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  t1 = $.getInterceptor$JSStringJSArray(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      strings = env0;
      break;
    case 3:
      length$ = env3;
      t1 = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      t1 = $.getInterceptor$JSStringJSArray(strings);
      length$ = t1.get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, t1, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = t1.operator$index$1(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = t1.operator$index$1(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CONSTANT4.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_parseDouble = function(string) {
  var result;
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  result = parseFloat(string);
  if ($.CONSTANT4.get$isNaN(result) === true && !$.eqB(string, "NaN"))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_getProperty = function(object, key) {
  if (object == null || typeof object === 'boolean' || typeof object === 'number' || typeof object === 'string')
    throw $.$$throw($.ArgumentError$(object));
  return object[key];
};

$.Primitives_setProperty = function(object, key, value) {
  if (object == null || typeof object === 'boolean' || typeof object === 'number' || typeof object === 'string')
    throw $.$$throw($.ArgumentError$(object));
  object[key] = value;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CONSTANT;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CONSTANT1.endsWith$1(message, "is null") === true || $.CONSTANT1.endsWith$1(message, "is undefined") === true || $.CONSTANT1.endsWith$1(message, "is null or undefined") === true || $.CONSTANT1.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CONSTANT0.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(closure, arg1, arg2).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.propertyTypeCastError = function(value, property) {
  var actualType, t1;
  actualType = $.Primitives_objectTypeName(value);
  t1 = $.getInterceptor$JSString(property);
  throw $.$$throw($.CastErrorImplementation$(actualType, t1.substring$2(property, 3, t1.get$length(property))));
};

$.callTypeCast = function(value, property) {
  var t1;
  if (!(value == null))
    t1 = typeof value === "object" && value[property]();
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  if (name$ === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT17));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT17)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.CONSTANT1.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT1.substring$1(receiver, startIndex));
  else {
    substr = $.CONSTANT1.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).iterator$0(t1).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_some = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
};

$.Collections_map = function(source, destination, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CONSTANT1.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.Expando$ = function(name$) {
  return new $.Expando(name$);
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl__FutureImpl$immediate(value);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$.Futures_wait = function(futures) {
  var t1, completer, result, values, i, future;
  t1 = {};
  if ($.CONSTANT0.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CONSTANT9);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_0 = futures.length;
  values = $.List_List(futures.length);
  for (i = 0; i < futures.length; ++i) {
    future = futures[i];
    future.then$1(new $.Futures_wait_anon(t1, completer, result, values, i));
    future.handleException$1(new $.Futures_wait_anon0(completer, result, future));
  }
  return result;
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(false, null, null, null, false, false, [], [], []);
};

$._FutureImpl__FutureImpl$immediate = function(value) {
  var res = $._FutureImpl$();
  res._setValue$1(value);
  return res;
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$());
};

$.List_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(null);
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    list.push(t1.next$0());
  return list;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.Map_Map$from = function(other) {
  return $._HashMapImpl__HashMapImpl$from(other);
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__HashMapImpl$from = function(other) {
  var result = $._HashMapImpl$();
  $.getInterceptor$JSArray(other).forEach$1(other, new $._HashMapImpl__HashMapImpl$from_anon(result));
  return result;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.Object$ = function() {
  return new $.Object();
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.Set_Set = function() {
  return $._HashSetImpl$();
};

$._HashSetImpl$ = function() {
  var t1 = new $._HashSetImpl(null);
  t1._HashSetImpl$0();
  return t1;
};

$._HashSetIterator$ = function(set_) {
  var t1 = new $._HashSetIterator(set_._backingMap._keys, -1);
  t1._HashSetIterator$1(set_);
  return t1;
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.DivElement_DivElement = function() {
  return $.document().$$dom_createElement$1("div");
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$._emptyStyleFuture = function() {
  return $._createMeasurementFuture(new $._emptyStyleFuture_anon(), $.Completer_Completer());
};

$._FrozenCssClassSet$ = function() {
  return new $._FrozenCssClassSet();
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.Element_Element$html = function(html) {
  return $._ElementFactoryProvider_createElement_html(html);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$._ElementFactoryProvider_createElement_html = function(html) {
  var match, t1, tag, parentTag, temp, element, t2;
  match = $.get$_START_TAG_REGEXP().firstMatch$1(html);
  if (!(match == null)) {
    t1 = match.group$1(1);
    tag = $.getInterceptor$JSString(t1).toLowerCase$0(t1);
    parentTag = $.CONSTANT16.containsKey$1(tag) === true ? $.CONSTANT16.operator$index$1(tag) : "div";
  } else {
    parentTag = "div";
    tag = null;
  }
  temp = $.Element_Element$tag(parentTag);
  temp.set$innerHtml(html);
  t1 = temp.get$children();
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1)) {
    t1 = temp.get$children();
    element = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0);
  } else {
    if ($.eqB(parentTag, "html")) {
      t1 = temp.get$children();
      t2 = $.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 2);
      t1 = t2;
    } else
      t1 = false;
    if (t1) {
      t1 = temp.get$children();
      t2 = $.getInterceptor$JSStringJSArray(t1);
      element = t2.operator$index$1(t1, $.eqB(tag, "head") ? 0 : 1);
    } else {
      t1 = temp.get$children();
      throw $.$$throw($.ArgumentError$("HTML had " + $.S($.getInterceptor$JSStringJSArray(t1).get$length(t1)) + " " + "top level elements but 1 expected"));
    }
  }
  element.remove$0();
  return element;
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.Event_Event = function(type, canBubble, cancelable) {
  return $._EventFactoryProvider_createEvent(type, canBubble, cancelable);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.MutationObserver_MutationObserver = function(callback) {
  return $.MutationObserver__create(callback);
};

$.MutationObserver__create = function(callback) {
  0;
  return new(window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver)($.convertDartClosureToJS(callback, 2));
};

$.MutationObserver_supported = function() {
  return !!(window.MutationObserver || window.WebKitMutationObserver);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.ShadowRoot_supported = function() {
  return !!(Element.prototype.webkitCreateShadowRoot);
};

$.WindowEvents$ = function(_ptr) {
  return new $.WindowEvents(_ptr);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$._MeasurementRequest$ = function(computeValue, completer) {
  return new $._MeasurementRequest(computeValue, completer, null, false);
};

$._MeasurementScheduler__MeasurementScheduler$best = function(callback) {
  if ($.MutationObserver_supported() === true)
    return $._MutationObserverScheduler$(callback);
  return $._PostMessageScheduler$(callback);
};

$._PostMessageScheduler$ = function(callback) {
  var t1 = new $._PostMessageScheduler("DART-MEASURE", false, callback);
  t1._PostMessageScheduler$1(callback);
  return t1;
};

$._MutationObserverScheduler$ = function(callback) {
  var t1 = new $._MutationObserverScheduler(null, null, false, callback);
  t1._MutationObserverScheduler$1(callback);
  return t1;
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._measurementScheduler == null)
    $._measurementScheduler = $._MeasurementScheduler__MeasurementScheduler$best($._completeMeasurementFutures);
  $._measurementScheduler.maybeSchedule$0();
};

$._createMeasurementFuture = function(computeValue, completer) {
  var t1;
  if ($._pendingRequests == null) {
    $._pendingRequests = [];
    $._maybeScheduleMeasurementFrame();
  }
  t1 = $._pendingRequests;
  $.getInterceptor$JSArray(t1).add$1(t1, $._MeasurementRequest$(computeValue, completer));
  return completer.get$future();
};

$._completeMeasurementFutures = function(exception) {
  var t1, request, t2, e, completedRequests, readyMeasurementFrameCallbacks, t3, t4;
  t1 = $._pendingRequests;
  if (!(t1 == null))
    for (t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      request = t1.next$0();
      try {
        t2 = request.computeValue$0();
        request.set$value(t2);
      } catch (exception) {
        t2 = $.unwrapException(exception);
        e = t2;
        t2 = e;
        request.set$value(t2);
        request.set$exception(true);
      }

    }
  completedRequests = $._pendingRequests;
  readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = null;
  $._pendingMeasurementFrameCallbacks = null;
  if (!(completedRequests == null))
    for (t1 = $.getInterceptor$JSArray(completedRequests).iterator$0(completedRequests); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = t2.get$exception() === true;
      t4 = t2.get$completer();
      if (t3)
        t4.completeException$1(t2.get$value());
      else
        t4.complete$1(t2.get$value());
    }
  if (!(readyMeasurementFrameCallbacks == null))
    for (t1 = $.getInterceptor$JSArray(readyMeasurementFrameCallbacks).iterator$0(readyMeasurementFrameCallbacks); t1.get$hasNext() === true;)
      t1.next$0().call$0();
};

$._EventFactoryProvider_createEvent = function(type, canBubble, cancelable) {
  var e = $.document().$$dom_createEvent$1("Event");
  e.$$dom_initEvent$3(type, canBubble, cancelable);
  return e;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
};

$.convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(values, copies);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t1, t2, t3).call$1(value);
  t4.call$0();
  return copy;
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, i;
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.geB(startIndex, t1.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB(t1.operator$index$1(a, i), element))
      return i;
  return -1;
};

$.Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, t1, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.gtB(end, t1.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push(t1.operator$index$1(a, i));
  return accumulator;
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.DetailedArgumentError$ = function(argument, details) {
  var t1 = new $.DetailedArgumentError(argument, details);
  t1.DetailedArgumentError$2(argument, details);
  return t1;
};

$.InvalidOperationError$ = function(message) {
  return new $.InvalidOperationError(message);
};

$.isValidNumber = function(value) {
  var t1;
  if (!(value == null)) {
    t1 = $.getInterceptor$JSNumber(value);
    t1 = t1.get$isInfinite(value) !== true && t1.get$isNaN(value) !== true;
  } else
    t1 = false;
  return t1;
};

$.Size$ = function(width, height) {
  return new $.Size(width, height);
};

$.requireArgumentNotNullOrEmpty = function(argument, argName) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (argument.length === 0)
    throw $.$$throw($.DetailedArgumentError$(argName, "cannot be an empty string"));
};

$._metaRequireArgumentNotNullOrEmpty = function(argName) {
  if (argName.length === 0)
    throw $.$$throw($.InvalidOperationError$("That's just sad. Give me a good argName"));
};

$.WebComponent__matches = function(node, selector) {
  var t1;
  if (typeof node === 'object' && node !== null && node.is$Text())
    return $.eq(selector, "*");
  t1 = $.callTypeCast(node.get$parent(), 'is$Element').queryAll$1(selector);
  return $.getInterceptor$JSArray(t1).some$1(t1, new $.WebComponent__matches_anon(node));
};

$.WebComponent__isActive = function(node) {
  for (node = node.get$parent(); !(node == null); node = node.get$parent())
    if ($.eqB(node.get$tagName(), "CONTENT") || $.eqB(node.get$tagName(), "SHADOW"))
      return false;
  return true;
};

$.WebComponent__distribute = function(insertionPoint, nodes) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(nodes).iterator$0(nodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    insertionPoint.get$parent().insertBefore$2(t2, insertionPoint);
  }
  insertionPoint.remove$0();
};

$._realShadowRoot = function() {
  return $.useShadowDom === true && $.ShadowRoot_supported() === true;
};

$.Css3TransitionEffect__recordProperties = function(element, properties) {
  var map, t1, t2, t3;
  map = $.Map_Map();
  if (typeof map !== 'object' || map === null || (map.constructor !== Array || !!map.immutable$list) && !map.is$JavaScriptIndexingBehavior())
    return $.Css3TransitionEffect__recordProperties$bailout(1, element, properties, map);
  for (t1 = $.CONSTANT0.iterator$0(properties); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    t3 = element.get$style().getPropertyValue$1(t2);
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= map.length)
      throw $.ioore(t2);
    map[t2] = t3;
  }
  return map;
};

$.Css3TransitionEffect__recordProperties$bailout = function(state0, element, properties, map) {
  var t1, t2;
  for (t1 = $.CONSTANT0.iterator$0(properties); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.indexSet(map, t2, element.get$style().getPropertyValue$1(t2));
  }
  return map;
};

$._css3TransitionEffectValues$ = function(element, originalValues) {
  return new $._css3TransitionEffectValues(element, originalValues, null);
};

$._css3TransitionEffectValues_delayStart = function(element, originalValues, action) {
  var t1, value;
  t1 = $.get$_css3TransitionEffectValues__values();
  value = $._css3TransitionEffectValues$(element, originalValues);
  $.indexSet(t1, element, value);
  value.timeoutHandle = $.window().setTimeout$2(new $._css3TransitionEffectValues_delayStart_anon(action, value), 1);
};

$._css3TransitionEffectValues_cleanup = function(element) {
  var t1, value;
  t1 = $.get$_css3TransitionEffectValues__values();
  value = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element);
  $.indexSet($.get$_css3TransitionEffectValues__values(), element, null);
  return value._cleanup$0();
};

$.FadeEffect$ = function() {
  var t1 = $.Map_Map();
  t1 = new $.FadeEffect("opacity", "0", "1", t1);
  t1.Css3TransitionEffect$4("opacity", "0", "1", null);
  return t1;
};

$.ShrinkEffect$ = function() {
  var t1, t2;
  t1 = $.makeLiteralMap(["overflow", "hidden"]);
  t2 = t1 == null ? $.Map_Map() : $.Map_Map$from(t1);
  t2 = new $.ShrinkEffect("max-height", "0", "500px", t2);
  t2.Css3TransitionEffect$4("max-height", "0", "500px", t1);
  return t2;
};

$.EffectTiming_defaultTiming = function() {
  return $.get$EffectTiming_ease();
};

$.CssEffectTiming$_internal = function(cssName) {
  return new $.CssEffectTiming(cssName);
};

$.CssEffectTiming__getCssValue = function(timing) {
  if (typeof timing === 'object' && timing !== null && !!timing.is$CssEffectTiming)
    return timing.cssName;
  else
    return "";
};

$.ShowHide_begin = function(action, element, duration, effect, effectTiming) {
  return $.ShowHide__populateState(element).transform$1(new $.ShowHide_begin_anon(action)).chain$1(new $.ShowHide_begin_anon0(element, effect, duration, effectTiming));
};

$.ShowHide__populateState = function(element) {
  var t1, currentValues;
  t1 = $.get$ShowHide__values();
  currentValues = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element);
  if (!(currentValues == null))
    return $.ShowHide__updateCachedSize(element).transform$1(new $.ShowHide__populateState_anon(currentValues));
  return $.Futures_wait([element.getComputedStyle$1(""), $.Tools_getDefaultDisplay(element.get$tagName())]).transform$1(new $.ShowHide__populateState_anon0(element));
};

$.ShowHide__updateCachedSize = function(element) {
  var t1, values;
  t1 = $.get$ShowHide__values();
  values = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element);
  return element.getComputedStyle$1("").transform$1($.Tools_getSize).transform$1(new $.ShowHide__updateCachedSize_anon(values));
};

$.ShowHide__getToggleState = function(action, state) {
  switch (action) {
    case $.CONSTANT6:
      return true;
    case $.CONSTANT7:
      return false;
    case $.CONSTANT15:
      switch (state) {
        case $.CONSTANT10:
        case $.CONSTANT13:
          return true;
        case $.CONSTANT14:
        case $.CONSTANT11:
          return false;
        default:
          throw $.$$throw($.DetailedArgumentError$("state", "Value of " + $.S(state) + " is not supported"));
      }
    default:
      throw $.$$throw($.DetailedArgumentError$("action", "Value of " + $.S(action) + " is not supported"));
  }
};

$.ShowHide__requestEffect = function(doShow, element, desiredDuration, effect, effectTiming) {
  var t1, size;
  if (desiredDuration == null)
    desiredDuration = 400;
  else if ($.ltB(desiredDuration, 0))
    desiredDuration = 0;
  if (effect == null)
    effect = $.CONSTANT12;
  if (effectTiming == null)
    effectTiming = $.EffectTiming_defaultTiming();
  t1 = $.get$ShowHide__values();
  size = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element).get$cachedSize();
  if (doShow === true)
    return $.ShowHide__requestShow(element, desiredDuration, effect, effectTiming, size);
  else
    return $.ShowHide__requestHide(element, desiredDuration, effect, effectTiming, size);
};

$.ShowHide__requestShow = function(element, desiredDuration, effect, effectTiming, size) {
  var t1, values, durationMS;
  t1 = $.get$ShowHide__values();
  values = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element);
  t1 = values.get$currentState();
  switch (t1) {
    case $.CONSTANT14:
      return $.Future_Future$immediate(true);
    case $.CONSTANT11:
      return $.Future_Future$immediate(true);
    case $.CONSTANT13:
      $._AnimatingValues_cancelAnimation(element);
      break;
    case $.CONSTANT10:
      break;
    default:
      throw $.$$throw($.DetailedArgumentError$("oldState", "the provided value " + $.S(t1) + " is not supported"));
  }
  $.ShowHide__finishShow(element);
  durationMS = effect.startShow$4(element, desiredDuration, effectTiming, size);
  if ($.gtB(durationMS, 0)) {
    values.set$currentState($.CONSTANT14);
    return $._AnimatingValues_scheduleCleanup(durationMS, element, effect.get$clearAnimation(), $.ShowHide__finishShow);
  }
  return $.Future_Future$immediate(true);
};

$.ShowHide__finishShow = function(element) {
  var t1, values;
  t1 = $.get$ShowHide__values();
  values = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element);
  t1 = $.ShowHide__getShowDisplayValue(element);
  element.get$style().set$display(t1);
  values.set$currentState($.CONSTANT11);
};

$.ShowHide__requestHide = function(element, desiredDuration, effect, effectTiming, size) {
  var t1, t2, durationMS;
  t1 = $.get$ShowHide__values();
  t2 = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element).get$currentState();
  switch (t2) {
    case $.CONSTANT13:
      return $.Future_Future$immediate(true);
    case $.CONSTANT10:
      $.ShowHide__finishHide(element);
      return $.Future_Future$immediate(true);
    case $.CONSTANT14:
      $._AnimatingValues_cancelAnimation(element);
      break;
    case $.CONSTANT11:
      break;
    default:
      throw $.$$throw($.DetailedArgumentError$("oldState", "the provided value " + $.S(t2) + " is not supported"));
  }
  durationMS = effect.startHide$4(element, desiredDuration, effectTiming, size);
  if ($.gtB(durationMS, 0)) {
    t1 = $.get$ShowHide__values();
    $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element).set$currentState($.CONSTANT13);
    return $._AnimatingValues_scheduleCleanup(durationMS, element, effect.get$clearAnimation(), $.ShowHide__finishHide);
  } else
    $.ShowHide__finishHide(element);
  return $.Future_Future$immediate(true);
};

$.ShowHide__finishHide = function(element) {
  var t1, values;
  t1 = $.get$ShowHide__values();
  values = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element);
  element.get$style().set$display("none");
  values.set$currentState($.CONSTANT10);
};

$.ShowHide__getShowDisplayValue = function(element) {
  var t1, values;
  t1 = $.get$ShowHide__values();
  values = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element);
  if ($.eqB(values.get$initialComputedDisplay(), "none")) {
    t1 = $.get$ShowHide__defaultDisplays();
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element.get$tagName());
  } else if ($.eqB(values.get$initialLocalDisplay(), "") || $.eqB(values.get$initialLocalDisplay(), "inherit"))
    return values.get$initialLocalDisplay();
  else
    return values.get$initialComputedDisplay();
};

$._ShowHideValues$ = function(initialComputedDisplay, initialLocalDisplay, currentState, _cachedSize) {
  return new $._ShowHideValues(initialComputedDisplay, initialLocalDisplay, currentState, _cachedSize);
};

$._AnimatingValues$_internal = function(_element, _cleanupAction, _finishFunc) {
  var t1 = new $._AnimatingValues(_element, _cleanupAction, _finishFunc, $.Completer_Completer(), null);
  t1._AnimatingValues$_internal$3(_element, _cleanupAction, _finishFunc);
  return t1;
};

$._AnimatingValues_cancelAnimation = function(element) {
  var t1 = $.get$_AnimatingValues__aniValues();
  $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, element)._cancel$0();
};

$._AnimatingValues_scheduleCleanup = function(durationMS, element, cleanupAction, finishAction) {
  return $._AnimatingValues$_internal(element, cleanupAction, finishAction)._start$1(durationMS);
};

$.Tools_getSize = function(css) {
  return $.Size$($.Tools__getPixelCount(css.get$width()), $.Tools__getPixelCount(css.get$height()));
};

$.Tools__getPixelCount = function(cssDimension) {
  var t1;
  if ($.eqB(cssDimension, "auto"))
    return;
  else {
    t1 = $.getInterceptor$JSString(cssDimension);
    return $.double_parse(t1.substring$2(cssDimension, 0, $.sub(t1.get$length(cssDimension), 2)));
  }
};

$.Tools_getDefaultDisplay = function(nodeName) {
  var t1, storedValue;
  t1 = $.get$Tools__elemDisplay();
  storedValue = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, nodeName);
  if (!(storedValue == null))
    return $.Future_Future$immediate(storedValue);
  else
    return $.Tools__css_defaultDisplay(nodeName).chain$1(new $.Tools_getDefaultDisplay_anon(nodeName)).transform$1(new $.Tools_getDefaultDisplay_anon0());
};

$.Tools__css_defaultDisplay = function(nodeName) {
  $.document();
  return $.Tools__actualDisplay(nodeName, $.document());
};

$.Tools__defaultDisplayHard = function(nodeName) {
  var t1;
  if ($.Tools__iframe == null) {
    t1 = $.Element_Element$tag("iframe");
    $.indexSet(t1.get$attributes(), "frameborder", "0");
    $.indexSet(t1.get$attributes(), "width", "0");
    $.indexSet(t1.get$attributes(), "height", "0");
    $.indexSet(t1.get$attributes(), "style", "display: block !important");
    $.Tools__iframe = t1;
  }
  t1 = $.document().get$body().get$children();
  $.getInterceptor$JSArray(t1).add$1(t1, $.Tools__iframe);
  $.Tools__iframe.get$contentWindow();
  throw $.$$throw("damn...");
};

$.Tools__actualDisplay = function(name$, doc) {
  var elem = $.Element_Element$tag(name$);
  doc.get$body().append$1(elem);
  return elem.getComputedStyle$1("").transform$1(new $.Tools__actualDisplay_anon(elem));
};

$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._completeMeasurementFutures.call$0 = $._completeMeasurementFutures;
$._completeMeasurementFutures.$name = "_completeMeasurementFutures";
$.ShowHide__finishShow.call$1 = $.ShowHide__finishShow;
$.ShowHide__finishShow.$name = "ShowHide__finishShow";
$.ShowHide__finishHide.call$1 = $.ShowHide__finishHide;
$.ShowHide__finishHide.$name = "ShowHide__finishHide";
$.Tools_getSize.call$1 = $.Tools_getSize;
$.Tools_getSize.$name = "Tools_getSize";
Isolate.$finishClasses($$);
$$ = {};
$.$int = {builtin$cls: '$int'};
$.String = {builtin$cls: 'String'};
$.List = {builtin$cls: 'List'};
$.Element = {builtin$cls: 'Element'};
$.Node = {builtin$cls: 'Node'};
$.CssStyleDeclaration = {builtin$cls: 'CssStyleDeclaration'};
$.bool = {builtin$cls: 'bool'};
$.Match = {builtin$cls: 'Match'};
$.CONSTANT3 = new Isolate.$isolateProperties.JSInt();
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT9 = Isolate.makeConstantList([]);
$.CONSTANT1 = new Isolate.$isolateProperties.JSString();
$.CONSTANT = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT5 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CONSTANT9);
$.CONSTANT18 = Isolate.makeConstantList(["childList", "attributes", "characterData", "subtree", "attributeOldValue", "characterDataOldValue"]);
$.CONSTANT2 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT13 = new Isolate.$isolateProperties.ShowHideState("hidding");
$.CONSTANT19 = Isolate.makeConstantList(["body", "head", "caption", "td", "colgroup", "col", "tr", "tbody", "tfoot", "thead", "track"]);
$.CONSTANT16 = new Isolate.$isolateProperties.ConstantMap(11, {body: "html", head: "html", caption: "table", td: "tr", colgroup: "table", col: "colgroup", tr: "tbody", tbody: "table", tfoot: "table", thead: "table", track: "audio"}, Isolate.$isolateProperties.CONSTANT19);
$.CONSTANT17 = new Isolate.$isolateProperties.Object();
$.CONSTANT8 = new Isolate.$isolateProperties.ConstantMap(6, {childList: true, attributes: true, characterData: true, subtree: true, attributeOldValue: true, characterDataOldValue: true}, Isolate.$isolateProperties.CONSTANT18);
$.CONSTANT10 = new Isolate.$isolateProperties.ShowHideState("hidden");
$.CONSTANT12 = new Isolate.$isolateProperties.ShowHideEffect();
$.CONSTANT11 = new Isolate.$isolateProperties.ShowHideState("shown");
$.CONSTANT15 = new Isolate.$isolateProperties.ShowHideAction("toggle");
$.CONSTANT7 = new Isolate.$isolateProperties.ShowHideAction("hide");
$.CONSTANT6 = new Isolate.$isolateProperties.ShowHideAction("show");
$.CONSTANT14 = new Isolate.$isolateProperties.ShowHideState("showing");
$.CONSTANT0 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT4 = new Isolate.$isolateProperties.JSNumber();
$.Expando__EXPANDO_PROPERTY_NAME = "expando$values";
$.ShowHideAction_SHOW = Isolate.$isolateProperties.CONSTANT6;
$._getTypeNameOf = null;
$.ShowHideAction_HIDE = Isolate.$isolateProperties.CONSTANT7;
$.Expander__openName = "open";
$.Expander__expanderDivSelector = ".expander-body-x";
$.ShowHideAction_TOGGLE = Isolate.$isolateProperties.CONSTANT15;
$.ShowHide__defaultDuration = 400;
$._cachedBrowserPrefix = null;
$.Tabs__activeTabAttribute = "active";
$.Tabs__targetAttribute = "target";
$.useShadowDom = false;
$.ShowHideState_SHOWN = Isolate.$isolateProperties.CONSTANT11;
$.ShowHideState_HIDDEN = Isolate.$isolateProperties.CONSTANT10;
$.ShowHideState_SHOWING = Isolate.$isolateProperties.CONSTANT14;
$.ShowHideState_HIDING = Isolate.$isolateProperties.CONSTANT13;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT2;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._pendingMeasurementFrameCallbacks = null;
$._pendingRequests = null;
$._measurementScheduler = null;
$.Expando__KEY_PROPERTY_NAME = "expando$key";
$.Primitives_hashCodeSeed = 0;
$.Expando__keyCount = 0;
$.Tools__iframe = null;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string')
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string')
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == 'number')
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'number') {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == 'string')
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == 'function')
    return $.JSFunction.prototype;
  if (typeof receiver == 'boolean')
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, '_effect', 'Expander__effect', 'get$Expander__effect', function() {
  return $.ShrinkEffect$();
});
Isolate.$lazy($, '_START_TAG_REGEXP', '_START_TAG_REGEXP', 'get$_START_TAG_REGEXP', function() {
  return $.RegExp_RegExp("<(\\w+)", false, false);
});
Isolate.$lazy($, 'ease', 'EffectTiming_ease', 'get$EffectTiming_ease', function() {
  return $.CssEffectTiming$_internal("ease");
});
Isolate.$lazy($, '_defaultDisplays', 'ShowHide__defaultDisplays', 'get$ShowHide__defaultDisplays', function() {
  return $.Map_Map();
});
Isolate.$lazy($, '_aniValues', '_AnimatingValues__aniValues', 'get$_AnimatingValues__aniValues', function() {
  return $.Expando$("_AnimatingValues");
});
Isolate.$lazy($, '_values', 'ShowHide__values', 'get$ShowHide__values', function() {
  return $.Expando$("_ShowHideValues");
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
Isolate.$lazy($, '_effect', 'Dropdown__effect', 'get$Dropdown__effect', function() {
  return $.FadeEffect$();
});
Isolate.$lazy($, '_elemDisplay', 'Tools__elemDisplay', 'get$Tools__elemDisplay', function() {
  return $.Map_Map();
});
Isolate.$lazy($, '_values', '_css3TransitionEffectValues__values', 'get$_css3TransitionEffectValues__values', function() {
  return $.Expando$("_css3TransitionEffectValues");
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$UnknownElement: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$List: function() { return false; },
 is$File: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$Blob: function() { return false; },
 is$ImageData: function() { return false; },
 is$Collection: function() { return false; },
 is$Text: function() { return false; },
 is$Map: function() { return false; },
 is$ShadowRoot: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$FileList: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Element: function() { return false; }
});

$.$defineNativeClass('HTMLAnchorElement', {"":"target>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLAppletElement', {"":"height>,width>"
});

$.$defineNativeClass('HTMLAreaElement', {"":"target>"
});

$.$defineNativeClass('ArrayBufferView', {
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"":"value="
});

$.$defineNativeClass('HTMLBaseElement', {"":"target>"
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
}
});

$.$defineNativeClass('HTMLButtonElement', {"":"value="
});

$.$defineNativeClass('HTMLCanvasElement', {"":"height>,width>"
});

$.$defineNativeClass('CharacterData', {"":"length>",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('CSSStyleDeclaration', {"":"length>",
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue, t1;
  propValue = this._getPropertyValue$1(propertyName);
  if (typeof propValue !== 'string')
    return this.getPropertyValue$1$bailout(1, propValue);
  t1 = propValue;
  return t1;
},
 getPropertyValue$1$bailout: function(state0, propValue) {
  return !(propValue == null) ? propValue : "";
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 setProperty$2: function(propertyName, value) {
  return this.setProperty$3(propertyName, value, null);
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 get$display: function() {
  return this.getPropertyValue$1("display");
},
 set$display: function(value) {
  this.setProperty$3("display", value, "");
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "filter");
},
 filter$1: function(arg0) {
  return this.get$filter().call$1(arg0);
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
},
 transform$1: function(arg0) {
  return this.get$transform().call$1(arg0);
},
 set$transitionDuration: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + "transition-duration", value, "");
},
 set$transitionProperty: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + "transition-property", value, "");
},
 set$transitionTimingFunction: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + "transition-timing-function", value, "");
},
 get$width: function() {
  return this.getPropertyValue$1("width");
}
});

$.$defineNativeClass('Document', {"":"$$dom_body:body~",
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $$dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $$dom_createEvent$1: function(eventType) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_createEvent$1')) {
    return this.createEvent(eventType);
  } else {
    return Object.prototype.$$dom_createEvent$1.call(this, eventType);
  }
},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_getElementsByName$1: function(elementName) {
  return this.getElementsByName(elementName);
},
 $$dom_getElementsByTagName$1: function(tagname) {
  return this.getElementsByTagName(tagname);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.getInterceptor$JSString(selectors).substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  var t1, mutableMatches, t3, len, copyOfMatches, i, t2;
  if ($.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", false, false).hasMatch$1(selectors) === true) {
    t1 = $.getInterceptor$JSString(selectors);
    mutableMatches = this.$$dom_getElementsByName$1(t1.substring$2(selectors, 7, $.sub(t1.get$length(selectors), 2)));
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(1, mutableMatches);
    t3 = $.getInterceptor$JSStringJSArray(mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $.List_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else if ($.RegExp_RegExp("^[*a-zA-Z0-9]+$", false, false).hasMatch$1(selectors) === true) {
    mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(3, mutableMatches);
    t2 = $.getInterceptor$JSStringJSArray(mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $.List_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else
    return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 queryAll$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      mutableMatches = env0;
      break;
    case 2:
      len = env2;
      t3 = env1;
      mutableMatches = env0;
      break;
    case 3:
      mutableMatches = env0;
      break;
    case 4:
      mutableMatches = env2;
      len = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var t1, mutableMatches, t3, len, copyOfMatches, i, t2;
      if (state0 === 2 || state0 === 1 || state0 === 0 && $.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", false, false).hasMatch$1(selectors) === true)
        switch (state0) {
          case 0:
            t1 = $.getInterceptor$JSString(selectors);
            mutableMatches = this.$$dom_getElementsByName$1(t1.substring$2(selectors, 7, $.sub(t1.get$length(selectors), 2)));
          case 1:
            state0 = 0;
            t3 = $.getInterceptor$JSStringJSArray(mutableMatches);
            len = t3.get$length(mutableMatches);
          case 2:
            state0 = 0;
            copyOfMatches = $.List_List(len);
            for (i = 0; $.ltB(i, len); ++i) {
              t1 = t3.operator$index$1(mutableMatches, i);
              if (i >= copyOfMatches.length)
                throw $.ioore(i);
              copyOfMatches[i] = t1;
            }
            return $._FrozenElementList$_wrap(copyOfMatches);
        }
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 4 || state0 === 3 || state0 === 0 && $.RegExp_RegExp("^[*a-zA-Z0-9]+$", false, false).hasMatch$1(selectors) === true)
              switch (state0) {
                case 0:
                  mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
                case 3:
                  state0 = 0;
                  t2 = $.getInterceptor$JSStringJSArray(mutableMatches);
                  len = t2.get$length(mutableMatches);
                case 4:
                  state0 = 0;
                  copyOfMatches = $.List_List(len);
                  for (i = 0; $.ltB(i, len); ++i) {
                    t1 = t2.operator$index$1(mutableMatches, i);
                    if (i >= copyOfMatches.length)
                      throw $.ioore(i);
                    copyOfMatches[i] = t1;
                  }
                  return $._FrozenElementList$_wrap(copyOfMatches);
              }
            else
              return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
        }
  }
}
});

$.$defineNativeClass('DocumentFragment', {
 get$children: function() {
  if (this._children == null)
    this._children = $.FilteredElementList$(this);
  return this._children;
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 set$innerHtml: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHtml')) {
    var t1, e, nodes;
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).clear$0(t1);
    e = $.Element_Element$tag("div");
    e.set$innerHtml(value);
    nodes = $.List_List$from(e.get$nodes());
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).addAll$1(t1, nodes);
  } else {
    return Object.prototype.set$innerHtml.call(this, value);
  }
},
 append$1: function(element) {
  var t1 = this.get$children();
  $.getInterceptor$JSArray(t1).add$1(t1, element);
},
 get$hidden: function() {
  return false;
},
 get$id: function() {
  return "";
},
 get$tagName: function() {
  return "";
},
 get$parent: function() {
  return;
},
 get$attributes: function() {
  return $.CONSTANT5;
},
 get$classes: function() {
  return $._FrozenCssClassSet$();
},
 get$style: function() {
  return $.Element_Element$tag("div").get$style();
},
 getComputedStyle$1: function(pseudoElement) {
  return $._emptyStyleFuture();
},
 click$0: function() {
},
 get$click: function() {
  return new $.BoundClosure(this, 'click$0');
},
 set$hidden: function(value) {
  throw $.$$throw($.UnsupportedError$("Hidden can't be set for document fragments."));
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
}
});

$.$defineNativeClass('DocumentType', {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {"":"xtag=,$$dom_children:children~,hidden=,id>,innerHtml:innerHTML|,$$dom_className:className},$$dom_firstElementChild:firstElementChild~,$$dom_lastElementChild:lastElementChild~,style>,tagName>",
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 get$children: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$children')) {
    return $._ChildrenElementList$_wrap(this);
  } else {
    return Object.prototype.get$children.call(this);
  }
},
 set$children: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$children')) {
    var copy, children, t1;
    copy = $.List_List$from(value);
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, copy);
  } else {
    return Object.prototype.set$children.call(this, value);
  }
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
    return $._ElementCssClassSet$(this);
  } else {
    return Object.prototype.get$classes.call(this);
  }
},
 getComputedStyle$1: function(pseudoElement) {
  return $._createMeasurementFuture(new $.Element_getComputedStyle_anon(this, pseudoElement), $.Completer_Completer());
},
 append$1: function(e) {
  var t1 = this.get$children();
  $.getInterceptor$JSArray(t1).add$1(t1, e);
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 click$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('click$0')) {
    return this.click();
  } else {
    return Object.prototype.click$0.call(this);
  }
},
 get$click: function() {
  return new $.BoundClosure(this, 'click$0');
},
 $$dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 $$dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 $$dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $$dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 createShadowRoot$0: function() {
  return this.webkitCreateShadowRoot();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"":"height>,width>"
});

$.$defineNativeClass('ErrorEvent', {"":"message>"
});

$.$defineNativeClass('Event', {
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.target);
},
 $$dom_initEvent$3: function(eventTypeArg, canBubbleArg, cancelableArg) {
  return this.initEvent(eventTypeArg,canBubbleArg,cancelableArg);
}
});

$.$defineNativeClass('EventException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
},
 $$dom_dispatchEvent$1: function(event) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_dispatchEvent$1')) {
    return this.dispatchEvent(event);
  } else {
    return Object.prototype.$$dom_dispatchEvent$1.call(this, event);
  }
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('FileException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLFormElement', {"":"length>,target>"
});

$.$defineNativeClass('HTMLFrameElement', {"":"height>,width>",
 get$contentWindow: function() {
  return $._convertNativeToDart_Window(this.contentWindow);
}
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
}
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $.Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {
 get$body: function() {
  return $.document().get$$$dom_body();
}
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLIFrameElement', {"":"height>,width>",
 get$contentWindow: function() {
  return $._convertNativeToDart_Window(this.contentWindow);
}
});

$.$defineNativeClass('HTMLImageElement', {"":"complete>,height>,width>",
 complete$1: function(arg0) {
  return this.complete.call$1(arg0);
}
});

$.$defineNativeClass('HTMLInputElement', {"":"height>,pattern>,value=,width>",
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"":"value="
});

$.$defineNativeClass('HTMLMarqueeElement', {"":"height>,width>"
});

$.$defineNativeClass('HTMLMediaElement', {
 get$on: function() {
  return $.MediaElementEvents$(this);
}
});

$.$defineNativeClass('MediaKeyEvent', {"":"message>"
});

$.$defineNativeClass('HTMLMeterElement', {"":"value="
});

$.$defineNativeClass('MutationObserver', {
 observe$9$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$options$subtree: function(target, attributeFilter, attributeOldValue, attributes, characterData, characterDataOldValue, childList, options, subtree) {
  var parsedOptions, t1;
  parsedOptions = {};
  if (!(options == null))
    $.getInterceptor$JSArray(options).forEach$1(options, new $.MutationObserver_observe_anon(parsedOptions));
  t1 = new $.MutationObserver_observe_override(parsedOptions);
  t1.call$2("childList", childList);
  t1.call$2("attributes", attributes);
  t1.call$2("characterData", characterData);
  t1.call$2("subtree", subtree);
  t1.call$2("attributeOldValue", attributeOldValue);
  t1.call$2("characterDataOldValue", characterDataOldValue);
  if (!(attributeFilter == null))
    t1.call$2("attributeFilter", attributeFilter);
  this._call$2(target, parsedOptions);
},
 observe$2$attributes: function(target, attributes) {
  return this.observe$9$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$options$subtree(target, null, null, attributes, null, null, null, null, null);
},
 _call$2: function(target, options) {
  return this.observe(target,options);
}
});

$.$defineNativeClass('MutationRecord', {"":"target>"
});

$.$defineNativeClass('NamedNodeMap', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $.Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"":"userAgent>"
});

$.$defineNativeClass('Node', {"":"$$dom_attributes:attributes~,$$dom_childNodes:childNodes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,parent:parentElement~,parentNode>,text:textContent|",
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.parentNode;
    parent$.$$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 insertBefore$2: function(newChild, refChild) {
  return this.insertBefore(newChild,refChild);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $.Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"":"height>,width>"
});

$.$defineNativeClass('HTMLOptionElement', {"":"value="
});

$.$defineNativeClass('HTMLOutputElement', {"":"value="
});

$.$defineNativeClass('HTMLParamElement', {"":"value="
});

$.$defineNativeClass('PositionError', {"":"message>"
});

$.$defineNativeClass('ProcessingInstruction', {"":"target>"
});

$.$defineNativeClass('HTMLProgressElement', {"":"value="
});

$.$defineNativeClass('RadioNodeList', {"":"value="
});

$.$defineNativeClass('RangeException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLSelectElement', {"":"length=,value="
});

$.$defineNativeClass('ShadowRoot', {"":"innerHtml:innerHTML|",
 is$ShadowRoot: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionError', {"":"message>"
});

$.$defineNativeClass('SQLError', {"":"message>"
});

$.$defineNativeClass('SQLException', {"":"message>"
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  this.$$dom_setItem$2(key, value);
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.$$dom_getItem$1(key) == null)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  this.forEach$1(new $.Storage_keys_anon(keys));
  return keys;
},
 get$length: function() {
  return this.length;
},
 get$isEmpty: function() {
  return this.$$dom_key$1(0) == null;
},
 $$dom_clear$0: function() {
  return this.clear();
},
 $$dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $$dom_key$1: function(index) {
  return this.key(index);
},
 $$dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $$dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"":"key>"
});

$.$defineNativeClass('Text', {
 is$Text: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', {"":"value="
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $.Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', {
 is$UnknownElement: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', {"":"height>,width>"
});

$.$defineNativeClass('DOMWindow', {"":"navigator>",
 get$on: function() {
  return $.WindowEvents$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.parent);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_getComputedStyle$2: function(element, pseudoElement) {
  return this.getComputedStyle(element,pseudoElement);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1, t2;
  t1 = $ === message;
  if (t1)
    message = null;
  t1 = !t1;
  t2 = $ === messagePorts;
  if (t2)
    messagePorts = null;
  if (t1 && t2) {
    this._postMessage_1$2($.convertDartToNative_SerializedScriptValue(message), targetOrigin);
    return;
  }
  if (t1) {
    this._postMessage_2$3($.convertDartToNative_SerializedScriptValue(message), targetOrigin, messagePorts);
    return;
  }
  throw $.$$throw($.ArgumentError$("Incorrect number or type of arguments"));
},
 postMessage$2: function(message, targetOrigin) {
  return this.postMessage$3(message, targetOrigin, $);
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 _postMessage_2$3: function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('XPathException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGAElement', {"":"target>",
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGCircleElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGClipPathElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGDefsElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGEllipseElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGFEBlendElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFECompositeElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEDropShadowElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEFloodElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEImageElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEMergeElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEMorphologyElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFEOffsetElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFETileElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFETurbulenceElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGFilterElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGForeignObjectElement', {"":"height>,width>",
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGGElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGImageElement', {"":"height>,width>",
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGLineElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGMaskElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGPathElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGPatternElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGPolygonElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGPolylineElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGRectElement', {"":"height>,width>",
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGDocument', {
 $$dom_createEvent$1: function(eventType) {
  return this.createEvent(eventType);
}
});

$.$defineNativeClass('SVGElement', {
 get$classes: function() {
  if (this._cssClassSet == null)
    this._cssClassSet = $._AttributeClassSet$(this);
  return this._cssClassSet;
},
 get$children: function() {
  return $.FilteredElementList$(this);
},
 set$children: function(value) {
  var children, t1;
  children = this.get$children();
  t1 = $.getInterceptor$JSArray(children);
  t1.clear$0(children);
  t1.addAll$1(children, value);
},
 set$innerHtml: function(svg) {
  var container, t1;
  container = $.Element_Element$tag("div");
  container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
  t1 = container.get$children();
  this.set$children($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0).get$children());
},
 get$$$dom_children: function() {
  throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
},
 click$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
},
 get$click: function() {
  return new $.BoundClosure(this, 'click$0');
},
 get$id: function() {
  return this.id;
}
});

$.$defineNativeClass('SVGException', {"":"message>",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGSVGElement', {"":"height>,width>"
});

$.$defineNativeClass('SVGSwitchElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGTextElement', {
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

$.$defineNativeClass('SVGUseElement', {"":"height>,width>",
 transform$1: function(arg0) {
  return this.transform.call$1(arg0);
}
});

// 106 dynamic classes.
// 238 classes
// 22 !leaf
(function() {
  var v0_MediaElement = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement', v1_SvgElement = 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEFuncBElement|SVGCursorElement|SVGDescElement|SVGDefsElement|SVGEllipseElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEColorMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEGaussianBlurElement|SVGFEBlendElement|SVGFEMergeElement|SVGFEFloodElement|SVGFilterElement|SVGFESpecularLightingElement|SVGFEMorphologyElement|SVGFontFaceElement|SVGFEImageElement|SVGFontElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGFEOffsetElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGHKernElement|SVGImageElement|SVGFEPointLightElement|SVGFESpotLightElement|SVGLineElement|SVGFontFaceNameElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGFEMergeNodeElement|SVGForeignObjectElement|SVGPathElement|SVGFontFaceFormatElement|SVGFEConvolveMatrixElement|SVGFETurbulenceElement|SVGFETileElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement', v2_Text = 'Text|CDATASection', v3_Element = [v0_MediaElement, v1_SvgElement, 'Element|HTMLUListElement|HTMLUnknownElement|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement'].join('|'), v4_CharacterData = [v2_Text, 'CharacterData|Comment'].join('|'), v5_Document = 'Document|SVGDocument|HTMLDocument', v6_DocumentFragment = 'DocumentFragment|ShadowRoot', v7_Node = [v3_Element, v4_CharacterData, v5_Document, v6_DocumentFragment, 'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|'), v8_Uint8Array = 'Uint8Array|Uint8ClampedArray';
  $.dynamicSetMetadata([['Uint8Array', v8_Uint8Array], ['HTMLMediaElement', v0_MediaElement], ['SVGElement', v1_SvgElement], ['Element', v3_Element], ['Event', 'Event|UIEvent|MouseEvent|WheelEvent|SVGZoomEvent|CompositionEvent|KeyboardEvent|TextEvent|TouchEvent|WebGLContextEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|WebKitAnimationEvent|CustomEvent|DeviceMotionEvent|CloseEvent|DeviceOrientationEvent|BeforeLoadEvent|ErrorEvent|HashChangeEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|ProgressEvent|XMLHttpRequestProgressEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent'], ['Text', v2_Text], ['CharacterData', v4_CharacterData], ['Document', v5_Document], ['DocumentFragment', v6_DocumentFragment], ['Node', v7_Node], ['EventTarget', [v7_Node, 'EventTarget|DOMWindow'].join('|')], ['HTMLCollection', 'HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection'], ['NodeList', 'NodeList|RadioNodeList'], ['ArrayBufferView', [v8_Uint8Array, 'ArrayBufferView'].join('|')]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.main0(); });
      } else {
        $.main0();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.main0(); });
  } else {
    $.main0();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=index.html_bootstrap.dart.js.map